{"remainingRequest":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"@babel/preset-env\",{\"useBuiltIns\":\"entry\",\"modules\":false}],\"@babel/preset-react\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",\"babel-plugin-styled-components\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"env\":{\"test\":{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\"]}},\"cacheDirectory\":true,\"babelrc\":false}!c:\\code\\exivity\\orbit-client\\src\\components\\Crud.js","dependencies":[{"path":"c:\\code\\exivity\\orbit-client\\src\\components\\Crud.js","mtime":1546607866802},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1543011188795},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js","mtime":1542804666583}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Crud =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Crud, _PureComponent);\n\n  function Crud() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Crud);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Crud)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"build\", function (type) {\n      var buildRecord = _this.props.buildRecord;\n      return buildRecord(type);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"isRecord\", function (record) {\n      return record.hasOwnProperty('type');\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"add\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(record, options) {\n        var _this$props, beforeAdd, addRecord, onAdd, onError, extensions, proceed, newRecord;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = _this.props, beforeAdd = _this$props.beforeAdd, addRecord = _this$props.addRecord, onAdd = _this$props.onAdd, onError = _this$props.onError, extensions = _this$props.extensions;\n\n                if (!beforeAdd) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 4;\n                return beforeAdd(record, extensions);\n\n              case 4:\n                proceed = _context.sent;\n                newRecord = _this.isRecord(proceed) ? proceed : record;\n                if (proceed) addRecord(newRecord, options).then(function (record) {\n                  return onAdd(record, extensions);\n                }).catch(function (error) {\n                  return onError(error, extensions);\n                });\n                _context.next = 10;\n                break;\n\n              case 9:\n                addRecord(record, options).then(function (record) {\n                  return onAdd(record, extensions);\n                }).catch(function (error) {\n                  return onError(error, extensions);\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"update\",\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(record, options) {\n        var _this$props2, beforeUpdate, updateRecord, onUpdate, onError, extensions, proceed, newRecord;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$props2 = _this.props, beforeUpdate = _this$props2.beforeUpdate, updateRecord = _this$props2.updateRecord, onUpdate = _this$props2.onUpdate, onError = _this$props2.onError, extensions = _this$props2.extensions;\n\n                if (!beforeUpdate) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 4;\n                return beforeUpdate(record, extensions);\n\n              case 4:\n                proceed = _context2.sent;\n                newRecord = _this.isRecord(proceed) ? proceed : record;\n                if (proceed) updateRecord(newRecord, options).then(function (record) {\n                  return onUpdate(record, extensions);\n                }).catch(function (error) {\n                  return onError(error, extensions);\n                });\n                _context2.next = 10;\n                break;\n\n              case 9:\n                updateRecord(record, options).then(function (record) {\n                  return onUpdate(record, extensions);\n                }).catch(function (error) {\n                  return onError(error, extensions);\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"remove\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(record, options) {\n        var _this$props3, beforeRemove, removeRecord, onRemove, onError, extensions, proceed, newRecord;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this$props3 = _this.props, beforeRemove = _this$props3.beforeRemove, removeRecord = _this$props3.removeRecord, onRemove = _this$props3.onRemove, onError = _this$props3.onError, extensions = _this$props3.extensions;\n\n                if (!beforeRemove) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.next = 4;\n                return beforeRemove(record, extensions);\n\n              case 4:\n                proceed = _context3.sent;\n                newRecord = _this.isRecord(proceed) ? proceed : record;\n                if (proceed) removeRecord(newRecord, options).then(function (record) {\n                  return onRemove(record, extensions);\n                }).catch(function (error) {\n                  return onError(error, extensions);\n                });\n                _context3.next = 10;\n                break;\n\n              case 9:\n                removeRecord(record, options).then(function (record) {\n                  return onRemove(record, extensions);\n                }).catch(function (error) {\n                  return onError(error, extensions);\n                });\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x5, _x6) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      buildRecord: _this.build,\n      addRecord: _this.add,\n      updateRecord: _this.update,\n      removeRecord: _this.remove\n    });\n\n    return _this;\n  }\n\n  _createClass(Crud, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children(this.state);\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Crud;\n}(PureComponent);\n\nCrud.propTypes = {\n  /**  Callback with build, add, update, remove promises. */\n  children: PropTypes.func.isRequired,\n\n  /** Function to build objectType. */\n  buildRecord: PropTypes.func,\n\n  /** Function to add record. */\n  addRecord: PropTypes.func,\n\n  /** Function to update record. */\n  updateRecord: PropTypes.func,\n\n  /** Function to remove record. */\n  removeRecord: PropTypes.func,\n\n  /** Callback called when add() resolves. Provides added record. */\n  onAdd: PropTypes.func,\n\n  /** Callback called when update() resolves. Provides updated record. */\n  onUpdate: PropTypes.func,\n\n  /** Callback called when remove() resolves. Provides removed record. */\n  onRemove: PropTypes.func,\n\n  /** Callback called before add(). Takes a promise or function.\r\n   Return truthy value to proceed with add() */\n  beforeAdd: PropTypes.func,\n\n  /** Callback called before update(). Takes a promise or function.\r\n   Return truthy value to proceed with update() */\n  beforeUpdate: PropTypes.func,\n\n  /** Callback called before remove(). Takes a promise or function.\r\n   Return truthy value to proceed with remove() */\n  beforeRemove: PropTypes.func,\n\n  /** Callback called when one of crud function catches */\n  onError: PropTypes.func,\n\n  /** Extensions which are provided with all callbacks */\n  extensions: PropTypes.object\n};\nCrud.defaultProps = {\n  buildRecord: function buildRecord() {},\n  addRecord: function addRecord() {},\n  updateRecord: function updateRecord() {},\n  removeRecord: function removeRecord() {},\n  onAdd: function onAdd() {},\n  onUpdate: function onUpdate() {},\n  onRemove: function onRemove() {},\n  onError: function onError() {},\n  extensions: {}\n};\nvar _default = Crud;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Crud, \"Crud\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\Crud.js\");\n  reactHotLoader.register(_default, \"default\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\Crud.js\");\n  leaveModule(module);\n})();\n\n;\nCrud.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"build\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"type\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"isRecord\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"record\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"add\",\n    \"docblock\": null,\n    \"modifiers\": [\"async\"],\n    \"params\": [{\n      \"name\": \"record\",\n      \"type\": null\n    }, {\n      \"name\": \"options\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"update\",\n    \"docblock\": null,\n    \"modifiers\": [\"async\"],\n    \"params\": [{\n      \"name\": \"record\",\n      \"type\": null\n    }, {\n      \"name\": \"options\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"remove\",\n    \"docblock\": null,\n    \"modifiers\": [\"async\"],\n    \"params\": [{\n      \"name\": \"record\",\n      \"type\": null\n    }, {\n      \"name\": \"options\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Crud\",\n  \"props\": {\n    \"buildRecord\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function to build objectType.\"\n    },\n    \"addRecord\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function to add record.\"\n    },\n    \"updateRecord\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function to update record.\"\n    },\n    \"removeRecord\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function to remove record.\"\n    },\n    \"onAdd\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called when add() resolves. Provides added record.\"\n    },\n    \"onUpdate\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called when update() resolves. Provides updated record.\"\n    },\n    \"onRemove\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called when remove() resolves. Provides removed record.\"\n    },\n    \"onError\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called when one of crud function catches\"\n    },\n    \"extensions\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"Extensions which are provided with all callbacks\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"Callback with build, add, update, remove promises.\"\n    },\n    \"beforeAdd\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called before add(). Takes a promise or function.\\r\\n   Return truthy value to proceed with add()\"\n    },\n    \"beforeUpdate\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called before update(). Takes a promise or function.\\r\\n   Return truthy value to proceed with update()\"\n    },\n    \"beforeRemove\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called before remove(). Takes a promise or function.\\r\\n   Return truthy value to proceed with remove()\"\n    }\n  }\n};",{"version":3,"sources":["c:\\code\\exivity\\orbit-client\\src\\components\\Crud.js"],"names":["PureComponent","PropTypes","Crud","type","buildRecord","props","record","hasOwnProperty","options","beforeAdd","addRecord","onAdd","onError","extensions","proceed","newRecord","isRecord","then","catch","error","beforeUpdate","updateRecord","onUpdate","beforeRemove","removeRecord","onRemove","build","add","update","remove","children","state","propTypes","func","isRequired","object","defaultProps"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass Crud extends PureComponent {\r\n  build = (type) => {\r\n    const { buildRecord } = this.props\r\n    return buildRecord(type)\r\n  }\r\n\r\n  isRecord = (record) => record.hasOwnProperty('type')\r\n\r\n  add = async (record, options) => {\r\n    const { beforeAdd, addRecord, onAdd, onError, extensions } = this.props\r\n\r\n    if (beforeAdd) {\r\n      const proceed = await beforeAdd(record, extensions)\r\n      const newRecord = this.isRecord(proceed) ? proceed : record\r\n\r\n      if (proceed) addRecord(newRecord, options)\r\n        .then((record) => onAdd(record, extensions))\r\n        .catch((error) => onError(error, extensions))\r\n    } else {\r\n      addRecord(record, options)\r\n        .then((record) => onAdd(record, extensions))\r\n        .catch((error) => onError(error, extensions))\r\n    }\r\n  }\r\n\r\n  update = async (record, options) => {\r\n    const { beforeUpdate, updateRecord, onUpdate, onError, extensions } = this.props\r\n\r\n    if (beforeUpdate) {\r\n      const proceed = await beforeUpdate(record, extensions)\r\n      const newRecord = this.isRecord(proceed) ? proceed : record\r\n\r\n      if (proceed) updateRecord(newRecord, options)\r\n        .then((record) => onUpdate(record, extensions))\r\n        .catch((error) => onError(error, extensions))\r\n    } else {\r\n      updateRecord(record, options)\r\n        .then((record) => onUpdate(record, extensions))\r\n        .catch((error) => onError(error, extensions))\r\n    }\r\n  }\r\n\r\n  remove = async (record, options) => {\r\n    const { beforeRemove, removeRecord, onRemove, onError, extensions } = this.props\r\n\r\n    if (beforeRemove) {\r\n      const proceed = await beforeRemove(record, extensions)\r\n      const newRecord = this.isRecord(proceed) ? proceed : record\r\n\r\n      if (proceed) removeRecord(newRecord, options)\r\n        .then((record) => onRemove(record, extensions))\r\n        .catch((error) => onError(error, extensions))\r\n    } else {\r\n      removeRecord(record, options)\r\n        .then((record) => onRemove(record, extensions))\r\n        .catch((error) => onError(error, extensions))\r\n    }\r\n  }\r\n\r\n  state = {\r\n    buildRecord: this.build,\r\n    addRecord: this.add,\r\n    updateRecord: this.update,\r\n    removeRecord: this.remove\r\n  }\r\n\r\n  render () {\r\n    return this.props.children(this.state)\r\n  }\r\n}\r\n\r\nCrud.propTypes = {\r\n  /**  Callback with build, add, update, remove promises. */\r\n  children: PropTypes.func.isRequired,\r\n  /** Function to build objectType. */\r\n  buildRecord: PropTypes.func,\r\n  /** Function to add record. */\r\n  addRecord: PropTypes.func,\r\n  /** Function to update record. */\r\n  updateRecord: PropTypes.func,\r\n  /** Function to remove record. */\r\n  removeRecord: PropTypes.func,\r\n  /** Callback called when add() resolves. Provides added record. */\r\n  onAdd: PropTypes.func,\r\n  /** Callback called when update() resolves. Provides updated record. */\r\n  onUpdate: PropTypes.func,\r\n  /** Callback called when remove() resolves. Provides removed record. */\r\n  onRemove: PropTypes.func,\r\n  /** Callback called before add(). Takes a promise or function.\r\n   Return truthy value to proceed with add() */\r\n  beforeAdd: PropTypes.func,\r\n  /** Callback called before update(). Takes a promise or function.\r\n   Return truthy value to proceed with update() */\r\n  beforeUpdate: PropTypes.func,\r\n  /** Callback called before remove(). Takes a promise or function.\r\n   Return truthy value to proceed with remove() */\r\n  beforeRemove: PropTypes.func,\r\n  /** Callback called when one of crud function catches */\r\n  onError: PropTypes.func,\r\n  /** Extensions which are provided with all callbacks */\r\n  extensions: PropTypes.object,\r\n}\r\n\r\nCrud.defaultProps = {\r\n  buildRecord: () => {},\r\n  addRecord: () => {},\r\n  updateRecord: () => {},\r\n  removeRecord: () => {},\r\n  onAdd: () => {},\r\n  onUpdate: () => {},\r\n  onRemove: () => {},\r\n  onError: () => {},\r\n  extensions: {}\r\n}\r\n\r\nexport default Crud\r\n"]}]}
{"remainingRequest":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"@babel/preset-env\",{\"useBuiltIns\":\"entry\",\"modules\":false}],\"@babel/preset-react\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",\"babel-plugin-styled-components\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"env\":{\"test\":{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\"]}},\"cacheDirectory\":true,\"babelrc\":false}!c:\\code\\exivity\\orbit-client\\src\\components\\withCrud.js","dependencies":[{"path":"c:\\code\\exivity\\orbit-client\\src\\components\\withCrud.js","mtime":1546418565789},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1543011188795},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js","mtime":1542804666583}],"contextDependencies":[],"result":["var _jsxFileName = \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\withCrud.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { PureComponent } from 'react';\nimport CrudContext from './Provider';\nimport Crud from './Crud';\nimport 'babel-polyfill';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'OrbitModel';\n}\n\nvar withCrud = function withCrud(WrappedComponent) {\n  var ModelWithCrud =\n  /*#__PURE__*/\n  function (_PureComponent) {\n    _inherits(ModelWithCrud, _PureComponent);\n\n    function ModelWithCrud() {\n      _classCallCheck(this, ModelWithCrud);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ModelWithCrud).apply(this, arguments));\n    }\n\n    _createClass(ModelWithCrud, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            beforeAdd = _this$props.beforeAdd,\n            onAdd = _this$props.onAdd,\n            beforeUpdate = _this$props.beforeUpdate,\n            onUpdate = _this$props.onUpdate,\n            beforeRemove = _this$props.beforeRemove,\n            onRemove = _this$props.onRemove,\n            rest = _objectWithoutProperties(_this$props, [\"beforeAdd\", \"onAdd\", \"beforeUpdate\", \"onUpdate\", \"beforeRemove\", \"onRemove\"]);\n\n        return React.createElement(CrudContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, function (_ref) {\n          var schema = _ref.schema,\n              crud = _objectWithoutProperties(_ref, [\"schema\"]);\n\n          return React.createElement(Crud, Object.assign({}, crud, {\n            beforeAdd: beforeAdd,\n            onAdd: onAdd,\n            beforeUpdate: beforeUpdate,\n            onUpdate: onUpdate,\n            beforeRemove: beforeRemove,\n            onRemove: onRemove,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }), function (extendedCrud) {\n            return React.createElement(WrappedComponent, Object.assign({}, rest, {\n              schema: schema\n            }, extendedCrud, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36\n              },\n              __self: this\n            }));\n          });\n        });\n      }\n    }, {\n      key: \"__reactstandin__regenerateByEval\",\n      // @ts-ignore\n      value: function __reactstandin__regenerateByEval(key, code) {\n        // @ts-ignore\n        this[key] = eval(code);\n      }\n    }]);\n\n    return ModelWithCrud;\n  }(PureComponent);\n\n  ModelWithCrud.displayName = getDisplayName(WrappedComponent);\n  return ModelWithCrud;\n};\n\nvar _default = withCrud;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(getDisplayName, \"getDisplayName\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\withCrud.js\");\n  reactHotLoader.register(withCrud, \"withCrud\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\withCrud.js\");\n  reactHotLoader.register(_default, \"default\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\withCrud.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["c:\\code\\exivity\\orbit-client\\src\\components\\withCrud.js"],"names":["React","PureComponent","CrudContext","Crud","getDisplayName","WrappedComponent","displayName","name","withCrud","ModelWithCrud","props","beforeAdd","onAdd","beforeUpdate","onUpdate","beforeRemove","onRemove","rest","schema","crud","extendedCrud"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,gBAAP;;AAEA,SAASC,cAAT,CAAwBC,gBAAxB,EAA0C;AACxC,SAAOA,gBAAgB,CAACC,WAAjB,IAAgCD,gBAAgB,CAACE,IAAjD,IAAyD,YAAhE;AACD;;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACH,gBAAD,EAAsB;AAAA,MAC/BI,aAD+B;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAEzB;AAAA,0BASJ,KAAKC,KATD;AAAA,YAENC,SAFM,eAENA,SAFM;AAAA,YAGNC,KAHM,eAGNA,KAHM;AAAA,YAINC,YAJM,eAINA,YAJM;AAAA,YAKNC,QALM,eAKNA,QALM;AAAA,YAMNC,YANM,eAMNA,YANM;AAAA,YAONC,QAPM,eAONA,QAPM;AAAA,YAQHC,IARG;;AAWR,eACE,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AAAA,cAAGC,MAAH,QAAGA,MAAH;AAAA,cAAcC,IAAd;;AAAA,iBACC,oBAAC,IAAD,oBAAUA,IAAV;AACE,YAAA,SAAS,EAAER,SADb;AAEE,YAAA,KAAK,EAAEC,KAFT;AAGE,YAAA,YAAY,EAAEC,YAHhB;AAIE,YAAA,QAAQ,EAAEC,QAJZ;AAKE,YAAA,YAAY,EAAEC,YALhB;AAME,YAAA,QAAQ,EAAEC,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAOG,UAACI,YAAD;AAAA,mBACC,oBAAC,gBAAD,oBAAsBH,IAAtB;AAA4B,cAAA,MAAM,EAAEC;AAApC,eAAgDE,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD;AAAA,WAPH,CADD;AAAA,SADH,CADF;AAiBD;AA9BkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,IACTnB,aADS;;AAiCrCQ,EAAAA,aAAa,CAACH,WAAd,GAA4BF,cAAc,CAACC,gBAAD,CAA1C;AACA,SAAOI,aAAP;AACD,CAnCD;;eAqCeD,Q;AAAf;;;;;;;;;;;;0BAzCSJ,c;0BAIHI,Q","sourcesContent":["import React, { PureComponent } from 'react'\r\n\r\nimport CrudContext from './Provider'\r\nimport Crud from './Crud'\r\n\r\nimport 'babel-polyfill'\r\n\r\nfunction getDisplayName(WrappedComponent) {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'OrbitModel'\r\n}\r\n\r\nconst withCrud = (WrappedComponent) => {\r\n  class ModelWithCrud extends PureComponent {\r\n    render () {\r\n      const { \r\n        beforeAdd, \r\n        onAdd,\r\n        beforeUpdate, \r\n        onUpdate, \r\n        beforeRemove, \r\n        onRemove, \r\n        ...rest \r\n      } = this.props\r\n\r\n      return (\r\n        <CrudContext.Consumer>\r\n          {({ schema, ...crud }) => (\r\n            <Crud {...crud}\r\n              beforeAdd={beforeAdd}\r\n              onAdd={onAdd}\r\n              beforeUpdate={beforeUpdate}\r\n              onUpdate={onUpdate}\r\n              beforeRemove={beforeRemove}\r\n              onRemove={onRemove}>\r\n              {(extendedCrud) => (\r\n                <WrappedComponent {...rest} schema={schema} {...extendedCrud} />\r\n              )}\r\n            </Crud>\r\n          )}\r\n        </CrudContext.Consumer>\r\n      )\r\n    }\r\n  }\r\n\r\n  ModelWithCrud.displayName = getDisplayName(WrappedComponent)\r\n  return ModelWithCrud\r\n}\r\n\r\nexport default withCrud\r\n"]}]}
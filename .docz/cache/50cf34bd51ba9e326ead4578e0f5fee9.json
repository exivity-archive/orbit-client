{"remainingRequest":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"@babel/preset-env\",{\"useBuiltIns\":\"entry\",\"modules\":false}],\"@babel/preset-react\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-optional-chaining\",\"@babel/plugin-proposal-class-properties\",\"babel-plugin-styled-components\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"env\":{\"test\":{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\"]}},\"cacheDirectory\":true,\"babelrc\":false}!c:\\code\\exivity\\orbit-client\\src\\utils\\decorateQuery.js","dependencies":[{"path":"c:\\code\\exivity\\orbit-client\\src\\utils\\decorateQuery.js","mtime":1540994384129},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1543011188795},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js","mtime":1542804666583}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar decorateQuery = function decorateQuery(queryFn, options) {\n  var expressions = Object.keys(options).reduce(function (acc, key) {\n    if (options[key]) acc[key] = options[key];\n    return acc;\n  }, {});\n  return Object.entries(expressions).reduce(function (query, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return function () {\n      return query.apply(void 0, arguments)[key](value);\n    };\n  }, queryFn);\n};\n\nvar _default = decorateQuery;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(decorateQuery, \"decorateQuery\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\utils\\\\decorateQuery.js\");\n  reactHotLoader.register(_default, \"default\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\utils\\\\decorateQuery.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["c:\\code\\exivity\\orbit-client\\src\\utils\\decorateQuery.js"],"names":["decorateQuery","queryFn","options","expressions","Object","keys","reduce","acc","key","entries","query","value"],"mappings":";;;;;;;;;;;;;;AAAA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAUC,OAAV,EAAsB;AAC1C,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,MAArB,CAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5D,QAAIN,OAAO,CAACM,GAAD,CAAX,EAAkBD,GAAG,CAACC,GAAD,CAAH,GAAWN,OAAO,CAACM,GAAD,CAAlB;AAClB,WAAOD,GAAP;AACD,GAHmB,EAGjB,EAHiB,CAApB;AAKA,SAAOH,MAAM,CAACK,OAAP,CAAeN,WAAf,EAA4BG,MAA5B,CAAmC,UAACI,KAAD,QAAyB;AAAA;AAAA,QAAhBF,GAAgB;AAAA,QAAXG,KAAW;;AACjE,WAAO;AAAA,aAAaD,KAAK,MAAL,oBAAeF,GAAf,EAAoBG,KAApB,CAAb;AAAA,KAAP;AACD,GAFM,EAEJV,OAFI,CAAP;AAGD,CATD;;eAWeD,a;AAAf;;;;;;;;;;;;0BAXMA,a","sourcesContent":["const decorateQuery = (queryFn, options) => {\r\n  const expressions = Object.keys(options).reduce((acc, key) => {\r\n    if (options[key]) acc[key] = options[key]\r\n    return acc\r\n  }, {})\r\n\r\n  return Object.entries(expressions).reduce((query, [key, value]) => {\r\n    return (...args) => query(...args)[key](value)\r\n  }, queryFn)\r\n}\r\n\r\nexport default decorateQuery\r\n"]}]}
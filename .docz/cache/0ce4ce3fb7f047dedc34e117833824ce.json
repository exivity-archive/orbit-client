{"remainingRequest":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"@babel/preset-env\",{\"useBuiltIns\":\"entry\",\"modules\":false}],\"@babel/preset-react\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",\"babel-plugin-styled-components\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"env\":{\"test\":{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\"]}},\"cacheDirectory\":true,\"babelrc\":false}!c:\\code\\exivity\\orbit-client\\src\\Collection.js","dependencies":[{"path":"c:\\code\\exivity\\orbit-client\\src\\Collection.js","mtime":1542402153914},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541623259616},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js","mtime":1539941072245}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withData } from 'react-orbitjs';\nimport pluralize from 'pluralize';\nimport omit from 'lodash/omit';\nimport decorateQuery from './utils/decorateQuery';\nvar notAllowedProps = ['id', 'type', 'related', 'relatedTo', 'children', 'queryStore', 'updateStore', 'plural', 'cache'];\n\nvar Collection =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Collection, _PureComponent);\n\n  function Collection(props) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"startQuery\", function (query) {\n      _this.setState({\n        loading: true,\n        error: false\n      }, query);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"query\", function () {\n      var _this$props = _this.props,\n          queryStore = _this$props.queryStore,\n          type = _this$props.type;\n      var relatedToCollection = Array.isArray(relatedTo);\n      var relatedIds;\n\n      if (relatedToCollection) {\n        if (!relatedToCollection.length) return null;\n        relatedIds = _this.getIdsFromRelatedCollection(relatedTo, type);\n      }\n\n      queryStore(function (q) {\n        return q.findRecords(type);\n      }).then(function (fetchedCollection) {\n        return _this.setState({\n          fetchedCollection: relatedToCollection ? _this.findRelatedRecords(fetchedCollection, relatedIds) : fetchedCollection,\n          loading: false\n        });\n      }).catch(function (error) {\n        _this.setState({\n          loading: false,\n          error: error\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"queryRelated\", function () {\n      var _this$props2 = _this.props,\n          queryStore = _this$props2.queryStore,\n          relatedTo = _this$props2.relatedTo;\n      queryStore(function (q) {\n        return q.findRelatedRecords({\n          type: relatedTo.type,\n          id: relatedTo.id\n        }, _this.pluralizedType);\n      }).then(function (fetchedCollection) {\n        _this.setState({\n          fetchedCollection: fetchedCollection,\n          loading: false\n        });\n      }).catch(function (error) {\n        _this.setState({\n          loading: false,\n          error: error\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"findOne\", function (id) {\n      var collection = _this.props[_this.props.type];\n      return collection.find(function (item) {\n        return item.id === id;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"find\", function (ids) {\n      var collection = _this.props[_this.props.type];\n      return ids.map(function (id) {\n        return collection.find(function (item) {\n          return item.id === id;\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"findByAttribute\", function (_ref) {\n      var attribute = _ref.attribute,\n          value = _ref.value;\n      var collection = _this.props[_this.props.type];\n      return collection.filter(function (item) {\n        return item.attributes[attribute] === value;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"buildSaveTransforms\", function (collection) {\n      return function (t) {\n        return collection.map(function (record) {\n          if (record.id) {\n            return t.replaceRecord(record);\n          }\n\n          return t.addRecord(record);\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"buildRemoveTransforms\", function (collection) {\n      return function (t) {\n        return collection.map(function (record) {\n          return t.removeRecord(record);\n        });\n      };\n    });\n\n    _this.pluralizedType = props.plural || pluralize(props.type);\n    _this.state = {\n      fetchedCollection: [],\n      loading: false,\n      error: false\n    };\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3 = this.props,\n          related = _this$props3.related,\n          relatedTo = _this$props3.relatedTo,\n          cache = _this$props3.cache;\n      if (cache === 'only') return null;\n      if (related && Array.isArray(relatedTo)) this.startQuery(this.query);\n      if (related && relatedTo) this.startQuery(this.queryRelated);\n      if (!related) this.startQuery(this.query);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _objectSpread3;\n\n      var _this$props4 = this.props,\n          collection = _this$props4[this.pluralizedType],\n          type = _this$props4.type,\n          relatedTo = _this$props4.relatedTo,\n          updateStore = _this$props4.updateStore,\n          cache = _this$props4.cache,\n          children = _this$props4.children;\n      var receivedEntities = omit(this.props, notAllowedProps.concat([type]));\n      var relatedToRecordOrCollection = !relatedTo ? collection : relatedTo;\n      var queryStatus = {\n        loading: !!this.props.loading || this.state.loading,\n        error: this.props.error || this.state.error\n      };\n      var extendedCollection = {\n        findOne: this.findOne,\n        find: this.find,\n        findByAttribute: this.findByAttribute,\n        all: function all() {\n          return cache === 'only' ? collection : _this2.state.fetchedCollection;\n        }\n      };\n\n      if (queryStatus.loading || queryStatus.error) {\n        var _propsToPass = _objectSpread(_defineProperty({}, this.pluralizedType, null), queryStatus);\n\n        if (typeof children !== 'function') {\n          // Child is component\n          return React.cloneElement(children, _objectSpread({}, _propsToPass, {\n            relatedTo: relatedToRecordOrCollection\n          }));\n        }\n\n        return children(_propsToPass);\n      }\n\n      var propsToPass = _objectSpread({}, receivedEntities, (_objectSpread3 = {}, _defineProperty(_objectSpread3, this.pluralizedType, extendedCollection), _defineProperty(_objectSpread3, \"save\", function save(collection) {\n        return updateStore(_this2.buildSaveTransforms(collection));\n      }), _defineProperty(_objectSpread3, \"remove\", function remove(collection) {\n        return updateStore(_this2.buildRemoveTransforms(collection));\n      }), _objectSpread3), queryStatus);\n\n      if (typeof this.props.children !== 'function') {\n        // Child is component\n        return React.cloneElement(children, _objectSpread({}, propsToPass, {\n          relatedTo: relatedToRecordOrCollection\n        }));\n      } // Child is a function\n\n\n      return children(propsToPass);\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }], [{\n    key: \"findRelatedRecords\",\n    value: function findRelatedRecords(collection, relatedIds) {\n      return collection.filter(function (record) {\n        return relatedIds.includes(record.id);\n      });\n    }\n  }, {\n    key: \"getIdsFromRelatedCollection\",\n    value: function getIdsFromRelatedCollection(relatedToCollection, ownType) {\n      return relatedToCollection.reduce(function (ids, record) {\n        var idsToAdd = record.relationships && record.relationships[ownType] && record.relationships[ownType].data.map(function (item) {\n          return item.id;\n        });\n        if (idsToAdd) return ids.concat(idsToAdd);\n        return ids;\n      }, []);\n    }\n  }]);\n\n  return Collection;\n}(PureComponent);\n\nvar mapRecordsToProps = function mapRecordsToProps(_ref2) {\n  var type = _ref2.type,\n      plural = _ref2.plural,\n      cache = _ref2.cache,\n      related = _ref2.related,\n      relatedTo = _ref2.relatedTo,\n      sort = _ref2.sort,\n      filter = _ref2.filter,\n      page = _ref2.page;\n  var pluralizedType = plural || pluralize(type);\n\n  if (cache === 'skip') {\n    return {};\n  }\n\n  if (related && Array.isArray(relatedTo)) {\n    return _defineProperty({}, pluralizedType, function (q) {\n      return q.findRecords(type);\n    });\n  }\n\n  if (related && relatedTo) {\n    return _defineProperty({}, pluralizedType, function (q) {\n      return q.findRelatedRecords({\n        type: relatedTo.type,\n        id: relatedTo.id\n      }, pluralizedType);\n    });\n  }\n\n  if (!related) {\n    return _defineProperty({}, pluralizedType, decorateQuery(function (q) {\n      return q.findRecords(type);\n    }, {\n      sort: sort,\n      filter: filter,\n      page: page\n    }));\n  }\n\n  return {};\n}; // Temp workaround for react-orbitjs not being able to handle other returns then functions\n\n\nvar mergeProps = function mergeProps(record, ownProps) {\n  var pluralizedType = ownProps.plural || pluralize(ownProps.type);\n\n  if (ownProps.cache === 'skip') {\n    return _objectSpread({}, ownProps);\n  }\n\n  if (ownProps.related && Array.isArray(ownProps.relatedTo)) {\n    var relatedIds = Collection.getIdsFromRelatedCollection(ownProps.relatedTo, pluralizedType); // memoization to be used/applied\n\n    return _objectSpread({}, record, ownProps, _defineProperty({}, pluralizedType, Collection.findRelatedRecords(record[pluralizedType], relatedIds)));\n  }\n\n  if (ownProps.related && !ownProps.relatedTo) {\n    return _objectSpread({}, record, ownProps, _defineProperty({}, pluralizedType, []));\n  }\n\n  return _objectSpread({}, record, ownProps);\n};\n\nexport { Collection };\n\nvar _default = withData(mapRecordsToProps, mergeProps)(Collection);\n\nexport default _default;\nCollection.displayName = 'Collection';\nCollection.defaultProps = {\n  cache: 'skip'\n};\nCollection.propTypes = {\n  type: PropTypes.string,\n  plural: PropTypes.string,\n  related: PropTypes.bool,\n  relatedTo: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  cache: PropTypes.oneOf(['only', 'skip']),\n  queryStore: PropTypes.func,\n  updateStore: PropTypes.func,\n  sort: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  filter: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  page: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(notAllowedProps, \"notAllowedProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Collection.js\");\n  reactHotLoader.register(Collection, \"Collection\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Collection.js\");\n  reactHotLoader.register(mapRecordsToProps, \"mapRecordsToProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Collection.js\");\n  reactHotLoader.register(mergeProps, \"mergeProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Collection.js\");\n  reactHotLoader.register(_default, \"default\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Collection.js\");\n  leaveModule(module);\n})();\n\n;\nCollection.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"findRelatedRecords\",\n    \"docblock\": null,\n    \"modifiers\": [\"static\"],\n    \"params\": [{\n      \"name\": \"collection\",\n      \"type\": null\n    }, {\n      \"name\": \"relatedIds\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"getIdsFromRelatedCollection\",\n    \"docblock\": null,\n    \"modifiers\": [\"static\"],\n    \"params\": [{\n      \"name\": \"relatedToCollection\",\n      \"type\": null\n    }, {\n      \"name\": \"ownType\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"startQuery\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"query\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"query\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"queryRelated\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"findOne\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"id\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"find\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"ids\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"findByAttribute\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"{ attribute, value }\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"buildSaveTransforms\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"collection\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"buildRemoveTransforms\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"collection\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Collection\",\n  \"props\": {\n    \"cache\": {\n      \"defaultValue\": {\n        \"value\": \"'skip'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'only'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'skip'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"plural\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"related\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"relatedTo\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"object\"\n        }, {\n          \"name\": \"array\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"queryStore\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"updateStore\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"sort\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"object\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"filter\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"object\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"page\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"number\"\n        }, {\n          \"name\": \"object\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["c:\\code\\exivity\\orbit-client\\src\\Collection.js"],"names":["React","PureComponent","PropTypes","withData","pluralize","omit","decorateQuery","notAllowedProps","Collection","props","query","setState","loading","error","queryStore","type","relatedToCollection","Array","isArray","relatedTo","relatedIds","length","getIdsFromRelatedCollection","q","findRecords","then","fetchedCollection","findRelatedRecords","catch","id","pluralizedType","collection","find","item","ids","map","attribute","value","filter","attributes","t","record","replaceRecord","addRecord","removeRecord","plural","state","related","cache","startQuery","queryRelated","updateStore","children","receivedEntities","relatedToRecordOrCollection","queryStatus","extendedCollection","findOne","findByAttribute","all","propsToPass","cloneElement","buildSaveTransforms","buildRemoveTransforms","includes","ownType","reduce","idsToAdd","relationships","data","concat","mapRecordsToProps","sort","page","mergeProps","ownProps","displayName","defaultProps","propTypes","string","bool","oneOfType","object","array","oneOf","func","number"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withData } from 'react-orbitjs'\r\nimport pluralize from 'pluralize'\r\nimport omit from 'lodash/omit'\r\n\r\nimport decorateQuery from './utils/decorateQuery'\r\n\r\nconst notAllowedProps = ['id', 'type', 'related', 'relatedTo', 'children', 'queryStore', 'updateStore', 'plural',\r\n  'cache']\r\n\r\nclass Collection extends PureComponent {\r\n  constructor (props) {\r\n    super (props)\r\n\r\n    this.pluralizedType = props.plural || pluralize(props.type)\r\n\r\n    this.state = {\r\n      fetchedCollection: [],\r\n      loading: false,\r\n      error: false\r\n    }\r\n  }\r\n\r\n  static findRelatedRecords (collection, relatedIds) {\r\n    return collection.filter(record => relatedIds.includes(record.id))\r\n  }\r\n\r\n  static getIdsFromRelatedCollection (relatedToCollection, ownType) {\r\n    return relatedToCollection.reduce((ids, record) => {\r\n      const idsToAdd = record.relationships && record.relationships[ownType] &&\r\n        record.relationships[ownType].data.map(item => item.id)\r\n\r\n      if (idsToAdd) return ids.concat(idsToAdd)\r\n      return ids\r\n    }, [])\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { related, relatedTo, cache } = this.props\r\n\r\n    if (cache === 'only') return null\r\n    if (related && Array.isArray(relatedTo)) this.startQuery(this.query)\r\n    if (related && relatedTo) this.startQuery(this.queryRelated)\r\n    if (!related) this.startQuery(this.query)\r\n  }\r\n\r\n  startQuery = (query) => {\r\n    this.setState({\r\n      loading: true,\r\n      error: false,\r\n    }, query)\r\n  }\r\n\r\n  query = () => {\r\n    const { queryStore, type } = this.props\r\n    const relatedToCollection = Array.isArray(relatedTo)\r\n    let relatedIds\r\n\r\n    if (relatedToCollection) {\r\n      if (!relatedToCollection.length) return null\r\n      relatedIds = this.getIdsFromRelatedCollection(relatedTo, type)\r\n    }\r\n\r\n    queryStore(q => q.findRecords(type))\r\n      .then((fetchedCollection) => this.setState({\r\n        fetchedCollection: relatedToCollection\r\n          ? this.findRelatedRecords(fetchedCollection, relatedIds)\r\n          : fetchedCollection,\r\n        loading: false\r\n      }))\r\n      .catch((error) => {\r\n        this.setState({\r\n          loading: false,\r\n          error\r\n        })\r\n      })\r\n  }\r\n\r\n  queryRelated = () => {\r\n    const { queryStore, relatedTo } = this.props\r\n\r\n    queryStore(q => q.findRelatedRecords({ type: relatedTo.type, id: relatedTo.id }, this.pluralizedType))\r\n      .then((fetchedCollection) => {\r\n        this.setState({\r\n          fetchedCollection,\r\n          loading: false\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          loading: false,\r\n          error\r\n        })\r\n      })\r\n  }\r\n\r\n  findOne = (id) => {\r\n    const { [this.props.type]: collection } = this.props\r\n\r\n    return collection.find(item => item.id === id)\r\n  }\r\n\r\n  find = (ids) => {\r\n    const { [this.props.type]: collection } = this.props\r\n\r\n    return ids.map(id => collection.find(item => item.id === id))\r\n  }\r\n\r\n  findByAttribute = ({ attribute, value }) => {\r\n    const { [this.props.type]: collection } = this.props\r\n\r\n    return collection.filter(item => item.attributes[attribute] === value)\r\n  }\r\n\r\n  buildSaveTransforms = (collection) => (t) => collection.map((record) => {\r\n    if (record.id) {\r\n      return t.replaceRecord(record)\r\n    }\r\n\r\n    return t.addRecord(record)\r\n  })\r\n\r\n  buildRemoveTransforms = (collection) => (t) => collection.map((record) => {\r\n    return t.removeRecord(record)\r\n  })\r\n\r\n  render () {\r\n    const { [this.pluralizedType]: collection, type, relatedTo, updateStore, cache, children } = this.props\r\n    const receivedEntities = omit(this.props, [...notAllowedProps, type])\r\n\r\n    const relatedToRecordOrCollection = !relatedTo ? collection : relatedTo\r\n\r\n    const queryStatus = {\r\n      loading: !!this.props.loading || this.state.loading,\r\n      error: this.props.error || this.state.error\r\n    }\r\n\r\n    const extendedCollection = {\r\n      findOne: this.findOne,\r\n      find: this.find,\r\n      findByAttribute: this.findByAttribute,\r\n      all: () => cache === 'only' ? collection : this.state.fetchedCollection\r\n    }\r\n\r\n    if (queryStatus.loading || queryStatus.error) {\r\n      const propsToPass = {\r\n        [this.pluralizedType]: null,\r\n        ...queryStatus\r\n      }\r\n\r\n      if (typeof children !== 'function') {\r\n        // Child is component\r\n        return React.cloneElement(\r\n          children,\r\n          {\r\n            ...propsToPass,\r\n            relatedTo: relatedToRecordOrCollection\r\n          }\r\n        )\r\n      }\r\n\r\n      return children(propsToPass)\r\n    }\r\n\r\n    const propsToPass = {\r\n      ...receivedEntities,\r\n      [this.pluralizedType]: extendedCollection,\r\n      save: (collection) => updateStore(this.buildSaveTransforms(collection)),\r\n      remove: (collection) => updateStore(this.buildRemoveTransforms(collection)),\r\n      ...queryStatus\r\n    }\r\n\r\n    if (typeof this.props.children !== 'function') {\r\n      // Child is component\r\n      return React.cloneElement(\r\n        children,\r\n        {\r\n          ...propsToPass,\r\n          relatedTo: relatedToRecordOrCollection\r\n        }\r\n      )\r\n    }\r\n    // Child is a function\r\n    return children(propsToPass)\r\n  }\r\n}\r\n\r\nconst mapRecordsToProps = ({ type, plural, cache, related, relatedTo, sort, filter, page }) => {\r\n  const pluralizedType = plural || pluralize(type)\r\n\r\n  if (cache === 'skip') {\r\n    return {}\r\n  }\r\n\r\n  if (related && Array.isArray(relatedTo)) {\r\n    return {\r\n      [pluralizedType]: q => q.findRecords(type)\r\n    }\r\n  }\r\n\r\n  if (related && relatedTo) {\r\n    return {\r\n      [pluralizedType]: q => q.findRelatedRecords({ type: relatedTo.type, id: relatedTo.id }, pluralizedType),\r\n    }\r\n  }\r\n\r\n  if (!related) {\r\n    return {\r\n      [pluralizedType]: decorateQuery(q => q.findRecords(type), { sort, filter, page }),\r\n    }\r\n  }\r\n\r\n  return {}\r\n}\r\n\r\n// Temp workaround for react-orbitjs not being able to handle other returns then functions\r\nconst mergeProps = (record, ownProps) => {\r\n  const pluralizedType = ownProps.plural || pluralize(ownProps.type)\r\n\r\n  if (ownProps.cache === 'skip') {\r\n    return {\r\n      ...ownProps\r\n    }\r\n  }\r\n\r\n  if (ownProps.related && Array.isArray(ownProps.relatedTo)) {\r\n    const relatedIds = Collection.getIdsFromRelatedCollection(ownProps.relatedTo, pluralizedType)\r\n\r\n    // memoization to be used/applied\r\n    return {\r\n      ...record,\r\n      ...ownProps,\r\n      [pluralizedType]: Collection.findRelatedRecords(record[pluralizedType], relatedIds)\r\n    }\r\n  }\r\n\r\n  if (ownProps.related && !ownProps.relatedTo) {\r\n    return {\r\n      ...record,\r\n      ...ownProps,\r\n      [pluralizedType]: []\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...record,\r\n    ...ownProps\r\n  }\r\n}\r\n\r\nexport { Collection }\r\n\r\nexport default withData(mapRecordsToProps, mergeProps)(Collection)\r\n\r\nCollection.displayName = 'Collection'\r\n\r\nCollection.defaultProps = {\r\n  cache: 'skip',\r\n}\r\n\r\nCollection.propTypes = {\r\n  type: PropTypes.string,\r\n  plural: PropTypes.string,\r\n  related: PropTypes.bool,\r\n  relatedTo: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.array,\r\n  ]),\r\n  cache: PropTypes.oneOf([\r\n    'only',\r\n    'skip'\r\n  ]),\r\n  queryStore: PropTypes.func,\r\n  updateStore: PropTypes.func,\r\n  sort: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object\r\n  ]),\r\n  filter: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object\r\n  ]),\r\n  page: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.object\r\n  ])\r\n}\r\n"]}]}
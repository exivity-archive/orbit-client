{"remainingRequest":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"@babel/preset-env\",{\"useBuiltIns\":\"entry\",\"modules\":false}],\"@babel/preset-react\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",\"babel-plugin-styled-components\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"env\":{\"test\":{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\"]}},\"cacheDirectory\":true,\"babelrc\":false}!c:\\code\\exivity\\orbit-client\\src\\Model.js","dependencies":[{"path":"c:\\code\\exivity\\orbit-client\\src\\Model.js","mtime":1541601535220},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541623259616},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js","mtime":1539941072245}],"contextDependencies":[],"result":["var _jsxFileName = \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Model.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withData } from 'react-orbitjs';\nimport omit from 'lodash/omit';\nimport Crud from './Crud';\nimport withCrudConsumer from './crudConsumer';\nvar notAllowedProps = ['id', 'type', 'related', 'relatedTo', 'children', 'queryStore', 'updateStore', 'buildRecord', 'addRecord', 'updateRecord', 'removeRecord', 'getRelationships'];\n\nvar Model =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Model, _PureComponent);\n\n  function Model(props) {\n    var _this;\n\n    _classCallCheck(this, Model);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Model).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"queryStoreById\", function (id) {\n      _this.props.queryStore(function (q) {\n        return q.findRecord({\n          type: _this.props.type,\n          id: id\n        });\n      }).then(function () {\n        return _this.setState({\n          loading: false\n        });\n      }).catch(function (error) {\n        _this.setState({\n          loading: false,\n          error: error\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"queryStoreByRelation\", function (_ref) {\n      var type = _ref.type,\n          id = _ref.id;\n\n      _this.props.queryStore(function (q) {\n        return q.findRelatedRecord({\n          type: type,\n          id: id\n        }, _this.props.type);\n      }).then(function () {\n        return _this.setState({\n          searchedAllSources: true,\n          loading: false\n        });\n      }).catch(function (error) {\n        _this.setState({\n          loading: false,\n          error: error\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setAttribute\", function (attribute) {\n      return function (value) {\n        _this.setState(function (_ref2) {\n          var record = _ref2[_this.props.type];\n          return _defineProperty({}, _this.props.type, _objectSpread({}, record, {\n            attributes: _objectSpread({}, record.attributes, _defineProperty({}, attribute, value))\n          }));\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setRelationship\", function (relationship) {\n      return function (value) {\n        _this.setState(function (_ref4) {\n          var record = _ref4[_this.props.type];\n          return _defineProperty({}, _this.props.type, _objectSpread({}, record, {\n            relationships: _objectSpread({}, record.relationships, _defineProperty({}, relationship, {\n              data: value\n            }))\n          }));\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onRemove\", function () {\n      var _this$setState;\n\n      var _this$props = _this.props,\n          type = _this$props.type,\n          onRemove = _this$props.onRemove;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, type, null), _defineProperty(_this$setState, \"error\", {\n        message: \"\".concat(type, \" has been removed\")\n      }), _this$setState));\n\n      onRemove && onRemove.apply(void 0, arguments);\n    });\n\n    var state;\n\n    if (!props.related) {\n      var _state;\n\n      var recordNotFoundInCache = !!props.id && !props[props.type];\n      state = (_state = {\n        idReference: props.id,\n        recordReference: props[props.type]\n      }, _defineProperty(_state, props.type, props[props.type] || props.buildRecord(props.type)), _defineProperty(_state, \"loading\", recordNotFoundInCache), _defineProperty(_state, \"error\", false), _state);\n    }\n\n    if (props.related) {\n      var _state2;\n\n      var relatedRecordNotFoundInCache = props.relatedTo && !props[props.type];\n      var record = relatedRecordNotFoundInCache ? null : props[props.type];\n      state = (_state2 = {\n        idReference: null,\n        recordReference: record\n      }, _defineProperty(_state2, props.type, record), _defineProperty(_state2, \"searchedAllSources\", false), _defineProperty(_state2, \"loading\", !!relatedRecordNotFoundInCache), _defineProperty(_state2, \"error\", false), _state2);\n    }\n\n    _this.state = state;\n    return _this;\n  } // @todo Add noRecord scenario when not related => return ewrror record not found\n\n\n  _createClass(Model, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          related = _this$props2.related,\n          relatedTo = _this$props2.relatedTo;\n      var loading = this.state.loading;\n\n      if (loading) {\n        if (related && relatedTo) {\n          this.queryStoreByRelation(relatedTo);\n        } else if (id) {\n          this.queryStoreById(id);\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$props3 = this.props,\n          id = _this$props3.id,\n          related = _this$props3.related,\n          relatedTo = _this$props3.relatedTo;\n      var loading = this.state.loading;\n\n      if (loading) {\n        if (related && relatedTo) {\n          this.queryStoreByRelation(relatedTo);\n        } else if (id) {\n          this.queryStoreById(id);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          type = _this$props4.type,\n          children = _this$props4.children,\n          related = _this$props4.related,\n          relatedTo = _this$props4.relatedTo;\n      var record = this.state[type];\n      var receivedEntities = omit(this.props, notAllowedProps.concat([type]));\n      var queryStatus = {\n        loading: !!this.props.loading || this.state.loading,\n        error: this.props.error || this.state.error\n      };\n      return React.createElement(Crud, Object.assign({}, this.props, {\n        onRemove: this.onRemove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), function (_ref6) {\n        var add = _ref6.add,\n            update = _ref6.update,\n            _remove = _ref6.remove;\n        var extendedRecord = record ? _objectSpread({}, record, {\n          setAttribute: _this2.setAttribute,\n          setRelationship: _this2.setRelationship,\n          save: record && !record.id ? function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            return add.apply(void 0, [record].concat(args));\n          } : function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            return update.apply(void 0, [record].concat(args));\n          },\n          remove: function remove() {\n            for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n              args[_key3] = arguments[_key3];\n            }\n\n            return _remove.apply(void 0, [record].concat(args));\n          }\n        }) : null;\n\n        if (queryStatus.loading || queryStatus.error) {\n          var passBack = _objectSpread(_defineProperty({}, type, null), receivedEntities, queryStatus); // Child is component\n\n\n          if (typeof children !== 'function') {\n            return React.cloneElement(_this2.props.children, _objectSpread({}, passBack, {\n              relatedTo: related ? relatedTo : record\n            }));\n          }\n\n          return children(passBack);\n        } // Child is component\n\n\n        if (typeof children !== 'function') {\n          return React.cloneElement(_this2.props.children, _objectSpread(_defineProperty({}, type, extendedRecord), receivedEntities, {\n            relatedTo: related ? relatedTo : record\n          }, queryStatus));\n        } // Child is a function - Provide record and status in callback\n\n\n        return children(_objectSpread(_defineProperty({}, type, extendedRecord), receivedEntities, queryStatus));\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (!props.related) {\n        var newIdProp = !!props.id && props.id !== state.idReference;\n        var buildRecord = !props.id && props.id !== state.idReference;\n        var newRecord = !!props[props.type] && props[props.type] !== state.recordReference;\n        var recordNotFoundInCache = props.id && !props[props.type];\n\n        if (buildRecord) {\n          var _ref7;\n\n          var record = props.buildRecord(props.type);\n          return _ref7 = {\n            idReference: props.id,\n            recordReference: record\n          }, _defineProperty(_ref7, props.type, record), _defineProperty(_ref7, \"loading\", false), _defineProperty(_ref7, \"error\", false), _ref7;\n        }\n\n        if (newIdProp) {\n          var _ref9;\n\n          if (recordNotFoundInCache) {\n            var _ref8;\n\n            return _ref8 = {\n              idReference: props.id,\n              recordReference: null\n            }, _defineProperty(_ref8, props.type, null), _defineProperty(_ref8, \"loading\", true), _defineProperty(_ref8, \"error\", false), _ref8;\n          }\n\n          return _ref9 = {\n            idReference: props.id,\n            recordReference: props[props.type]\n          }, _defineProperty(_ref9, props.type, props[props.type]), _defineProperty(_ref9, \"loading\", false), _defineProperty(_ref9, \"error\", false), _ref9;\n        }\n\n        if (newRecord) {\n          var _ref10;\n\n          return _ref10 = {\n            idReference: props.id,\n            recordReference: props[props.type]\n          }, _defineProperty(_ref10, props.type, props[props.type]), _defineProperty(_ref10, \"loading\", false), _defineProperty(_ref10, \"error\", false), _ref10;\n        }\n\n        return null;\n      }\n\n      if (props.related) {\n        var noRecordToRelateTo = !props.relatedTo;\n        var relatedRecordNotFoundInCache = props.relatedTo && !props[props.type] && !state.searchedAllSources;\n        var newRelatedRecord = !!props[props.type] && props[props.type] !== state.recordReference;\n        var noRelatedRecord = !props[props.type] && state.searchedAllSources;\n\n        if (noRecordToRelateTo) {\n          var _ref11;\n\n          return _ref11 = {\n            recordReference: null\n          }, _defineProperty(_ref11, props.type, null), _defineProperty(_ref11, \"searchedAllSources\", false), _defineProperty(_ref11, \"loading\", false), _defineProperty(_ref11, \"error\", false), _ref11;\n        }\n\n        if (relatedRecordNotFoundInCache) {\n          var _ref12;\n\n          return _ref12 = {\n            recordReference: null\n          }, _defineProperty(_ref12, props.type, null), _defineProperty(_ref12, \"loading\", true), _defineProperty(_ref12, \"error\", false), _ref12;\n        }\n\n        if (newRelatedRecord) {\n          var _ref13;\n\n          return _ref13 = {\n            recordReference: props[props.type]\n          }, _defineProperty(_ref13, props.type, props[props.type]), _defineProperty(_ref13, \"searchedAllSources\", false), _defineProperty(_ref13, \"loading\", false), _defineProperty(_ref13, \"error\", false), _ref13;\n        }\n\n        if (noRelatedRecord && props.required) {\n          return {\n            loading: false,\n            error: {\n              message: \"Related \".concat(props.type, \" has not been found while being required\")\n            }\n          };\n        }\n\n        return null;\n      }\n    }\n  }]);\n\n  return Model;\n}(PureComponent);\n\nvar mapRecordsToProps = function mapRecordsToProps(_ref14) {\n  var id = _ref14.id,\n      type = _ref14.type,\n      related = _ref14.related,\n      relatedTo = _ref14.relatedTo;\n\n  if (related && relatedTo) {\n    return _defineProperty({}, type, function (q) {\n      return q.findRelatedRecord({\n        type: relatedTo.type,\n        id: relatedTo.id\n      }, type);\n    });\n  }\n\n  if (id) {\n    return _defineProperty({}, type, function (q) {\n      return q.findRecord({\n        type: type,\n        id: id\n      });\n    });\n  }\n\n  return {};\n};\n\nvar mergeProps = function mergeProps(record, ownProps) {\n  // Temporary fix for react-orbitjs not clearing last result when nothing is found\n  if (ownProps.related && ownProps.relatedTo && (!ownProps.relatedTo.relationships || !ownProps.relatedTo.relationships[ownProps.type])) {\n    return _objectSpread({}, record, ownProps, _defineProperty({}, ownProps.type, null));\n  } // Temporary fix for react-orbitjs not clearing last result when nothing is found\n\n\n  if (!ownProps.id && !ownProps.related) {\n    return _objectSpread({}, record, ownProps, _defineProperty({}, ownProps.type, null));\n  }\n\n  return _objectSpread({}, ownProps, record);\n};\n\nvar WithConsumer = withCrudConsumer(Model);\n\nvar _default = withData(mapRecordsToProps, mergeProps)(WithConsumer);\n\nexport default _default;\nModel.propTypes = {\n  type: PropTypes.string,\n  id: PropTypes.string,\n  buildRecord: PropTypes.func,\n  addRecord: PropTypes.func,\n  updateRecord: PropTypes.func,\n  removeRecord: PropTypes.func,\n  beforeAdd: PropTypes.func,\n  onAdd: PropTypes.func,\n  beforeUpdate: PropTypes.func,\n  onUpdate: PropTypes.func,\n  beforeRemove: PropTypes.func,\n  onRemove: PropTypes.func,\n  related: PropTypes.bool,\n  required: PropTypes.bool\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(notAllowedProps, \"notAllowedProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Model.js\");\n  reactHotLoader.register(Model, \"Model\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Model.js\");\n  reactHotLoader.register(mapRecordsToProps, \"mapRecordsToProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Model.js\");\n  reactHotLoader.register(mergeProps, \"mergeProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Model.js\");\n  reactHotLoader.register(WithConsumer, \"WithConsumer\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Model.js\");\n  reactHotLoader.register(_default, \"default\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Model.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["c:\\code\\exivity\\orbit-client\\src\\Model.js"],"names":["React","PureComponent","PropTypes","withData","omit","Crud","withCrudConsumer","notAllowedProps","Model","props","id","queryStore","q","findRecord","type","then","setState","loading","catch","error","findRelatedRecord","searchedAllSources","attribute","value","record","attributes","relationship","relationships","data","onRemove","message","state","related","recordNotFoundInCache","idReference","recordReference","buildRecord","relatedRecordNotFoundInCache","relatedTo","queryStoreByRelation","queryStoreById","children","receivedEntities","queryStatus","add","update","remove","extendedRecord","setAttribute","setRelationship","save","args","passBack","cloneElement","newIdProp","newRecord","noRecordToRelateTo","newRelatedRecord","noRelatedRecord","required","mapRecordsToProps","mergeProps","ownProps","WithConsumer","propTypes","string","func","addRecord","updateRecord","removeRecord","beforeAdd","onAdd","beforeUpdate","onUpdate","beforeRemove","bool"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withData } from 'react-orbitjs'\r\nimport omit from 'lodash/omit'\r\n\r\nimport Crud from './Crud'\r\nimport withCrudConsumer from './crudConsumer'\r\n\r\nconst notAllowedProps = ['id', 'type', 'related', 'relatedTo', 'children', 'queryStore', 'updateStore',\r\n'buildRecord', 'addRecord', 'updateRecord', 'removeRecord', 'getRelationships']\r\n\r\nclass Model extends PureComponent {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    let state\r\n\r\n    if (!props.related) {\r\n      const recordNotFoundInCache = !!props.id && !props[props.type]\r\n\r\n      state = {\r\n        idReference: props.id,\r\n        recordReference: props[props.type],\r\n        [props.type]: props[props.type] || props.buildRecord(props.type),\r\n        loading: recordNotFoundInCache,\r\n        error: false\r\n      }\r\n    }\r\n\r\n    if (props.related) {\r\n      const relatedRecordNotFoundInCache = props.relatedTo && !props[props.type]\r\n      const record = relatedRecordNotFoundInCache ? null : props[props.type]\r\n\r\n      state = {\r\n        idReference: null,\r\n        recordReference: record,\r\n        [props.type]: record,\r\n        searchedAllSources: false,\r\n        loading: !!relatedRecordNotFoundInCache,\r\n        error: false\r\n      }\r\n    }\r\n\r\n    this.state = state\r\n  }\r\n  // @todo Add noRecord scenario when not related => return ewrror record not found\r\n  static getDerivedStateFromProps (props, state) {\r\n    if (!props.related) {\r\n      const newIdProp = !!props.id && props.id !== state.idReference\r\n      const buildRecord = !props.id && props.id !== state.idReference\r\n      const newRecord = !!props[props.type] && (props[props.type] !== state.recordReference)\r\n      const recordNotFoundInCache = props.id && !props[props.type]\r\n\r\n      if (buildRecord) {\r\n        const record = props.buildRecord(props.type)\r\n\r\n        return {\r\n          idReference: props.id,\r\n          recordReference: record,\r\n          [props.type]: record,\r\n          loading: false,\r\n          error: false\r\n        }\r\n      }\r\n\r\n      if (newIdProp) {\r\n        if (recordNotFoundInCache) {\r\n          return {\r\n            idReference: props.id,\r\n            recordReference: null,\r\n            [props.type]: null,\r\n            loading: true,\r\n            error: false\r\n          }\r\n        }\r\n\r\n        return {\r\n          idReference: props.id,\r\n          recordReference: props[props.type],\r\n          [props.type]: props[props.type],\r\n          loading: false,\r\n          error: false\r\n        }\r\n      }\r\n\r\n      if (newRecord) {\r\n        return {\r\n          idReference: props.id,\r\n          recordReference: props[props.type],\r\n          [props.type]: props[props.type],\r\n          loading: false,\r\n          error: false\r\n        }\r\n      }\r\n\r\n      return null\r\n    }\r\n\r\n    if (props.related) {\r\n      const noRecordToRelateTo = !props.relatedTo\r\n      const relatedRecordNotFoundInCache = props.relatedTo && !props[props.type] && !state.searchedAllSources\r\n      const newRelatedRecord = !!props[props.type] && (props[props.type] !== state.recordReference)\r\n      const noRelatedRecord = !props[props.type] && state.searchedAllSources\r\n\r\n      if (noRecordToRelateTo) {\r\n        return {\r\n          recordReference: null,\r\n          [props.type]: null,\r\n          searchedAllSources: false,\r\n          loading: false,\r\n          error: false\r\n        }\r\n      }\r\n\r\n      if (relatedRecordNotFoundInCache) {\r\n        return {\r\n          recordReference: null,\r\n          [props.type]: null,\r\n          loading: true,\r\n          error: false\r\n        }\r\n      }\r\n\r\n      if (newRelatedRecord) {\r\n        return {\r\n          recordReference: props[props.type],\r\n          [props.type]: props[props.type],\r\n          searchedAllSources: false,\r\n          loading: false,\r\n          error: false\r\n        }\r\n      }\r\n\r\n      if (noRelatedRecord && props.required) {\r\n        return {\r\n          loading: false,\r\n          error: {\r\n            message: `Related ${props.type} has not been found while being required`\r\n          }\r\n        }\r\n      }\r\n\r\n      return null\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { id, related, relatedTo } = this.props\r\n    const { loading } = this.state\r\n\r\n    if (loading) {\r\n      if (related && relatedTo) {\r\n        this.queryStoreByRelation(relatedTo)\r\n      } else if (id) {\r\n        this.queryStoreById(id)\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    const { id, related, relatedTo } = this.props\r\n    const { loading } = this.state\r\n\r\n    if (loading) {\r\n      if (related && relatedTo) {\r\n        this.queryStoreByRelation(relatedTo)\r\n      } else if (id) {\r\n        this.queryStoreById(id)\r\n      }\r\n    }\r\n  }\r\n\r\n  queryStoreById = (id) => {\r\n    this.props.queryStore(q => q.findRecord({ type: this.props.type, id }))\r\n      .then(() => this.setState({ loading: false }))\r\n      .catch((error) => {\r\n        this.setState({\r\n          loading: false,\r\n          error\r\n        })\r\n      })\r\n  }\r\n\r\n  queryStoreByRelation = ({ type, id }) => {\r\n    this.props.queryStore(q => q.findRelatedRecord({ type, id}, this.props.type))\r\n      .then(() => this.setState({\r\n          searchedAllSources: true,\r\n          loading: false,\r\n      }))\r\n      .catch((error) => {\r\n        this.setState({\r\n          loading: false,\r\n          error\r\n        })\r\n      })\r\n  }\r\n\r\n  setAttribute = (attribute) => (value) => {\r\n    this.setState(({ [this.props.type]: record }) => ({\r\n      [this.props.type]: {\r\n        ...record,\r\n        attributes: {\r\n          ...record.attributes,\r\n          [attribute]: value\r\n        }\r\n      }\r\n    }))\r\n  }\r\n\r\n  setRelationship = (relationship) => (value) => {\r\n    this.setState(({ [this.props.type]: record }) => ({\r\n      [this.props.type]: {\r\n        ...record,\r\n        relationships: {\r\n          ...record.relationships,\r\n          [relationship]: {\r\n            data: value\r\n          }\r\n        }\r\n      }\r\n    }))\r\n  }\r\n\r\n  onRemove = (...args) => {\r\n    const { type, onRemove } = this.props\r\n\r\n    this.setState({\r\n      [type]: null,\r\n      error: {\r\n        message: `${type} has been removed`\r\n      }\r\n    })\r\n\r\n    onRemove && onRemove(...args)\r\n  }\r\n\r\n  render () {\r\n    const { type, children, related, relatedTo } = this.props\r\n    const { [type]: record } = this.state\r\n    const receivedEntities = omit(this.props, [...notAllowedProps, type])\r\n\r\n    const queryStatus = {\r\n      loading: !!this.props.loading || this.state.loading,\r\n      error: this.props.error || this.state.error\r\n    }\r\n\r\n    return (\r\n      <Crud {...this.props} onRemove={this.onRemove}>\r\n        {({ add, update, remove }) => {\r\n          const extendedRecord = record\r\n            ?  {\r\n              ...record,\r\n              setAttribute: this.setAttribute,\r\n              setRelationship: this.setRelationship,\r\n              save: record && !record.id\r\n                ? (...args) => add(record, ...args)\r\n                : (...args) => update(record, ...args),\r\n              remove: (...args) => remove(record, ...args)\r\n            }\r\n            : null\r\n\r\n          if (queryStatus.loading || queryStatus.error) {\r\n            const passBack = {\r\n              [type]: null,\r\n              ...receivedEntities,\r\n              ...queryStatus\r\n            }\r\n\r\n            // Child is component\r\n            if (typeof children !== 'function') {\r\n              return React.cloneElement(\r\n                this.props.children,\r\n                {\r\n                  ...passBack,\r\n                  relatedTo: related\r\n                    ? relatedTo\r\n                    : record\r\n                },\r\n              )\r\n            }\r\n\r\n            return children(passBack)\r\n          }\r\n\r\n          // Child is component\r\n          if (typeof children !== 'function') {\r\n            return React.cloneElement(\r\n              this.props.children,\r\n              {\r\n                [type]: extendedRecord,\r\n                ...receivedEntities,\r\n                relatedTo: related\r\n                  ? relatedTo\r\n                  : record,\r\n                ...queryStatus\r\n              }\r\n            )\r\n          }\r\n\r\n          // Child is a function - Provide record and status in callback\r\n          return children({\r\n            [type]: extendedRecord,\r\n            ...receivedEntities,\r\n            ...queryStatus\r\n          })\r\n        }}\r\n      </Crud>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapRecordsToProps = ({ id, type, related, relatedTo }) => {\r\n  if (related && relatedTo) {\r\n    return { [type]: q => q.findRelatedRecord({ type: relatedTo.type, id: relatedTo.id }, type) }\r\n  }\r\n\r\n  if (id) {\r\n    return { [type]: q => q.findRecord({ type, id }) }\r\n  }\r\n\r\n  return {}\r\n}\r\n\r\n\r\nconst mergeProps = (record, ownProps) => {\r\n  // Temporary fix for react-orbitjs not clearing last result when nothing is found\r\n  if (ownProps.related && ownProps.relatedTo && (!ownProps.relatedTo.relationships || !ownProps.relatedTo.relationships[ownProps.type])) {\r\n    return {\r\n      ...record,\r\n      ...ownProps,\r\n      [ownProps.type]: null\r\n    }\r\n  }\r\n\r\n  // Temporary fix for react-orbitjs not clearing last result when nothing is found\r\n  if (!ownProps.id && !ownProps.related) {\r\n    return {\r\n      ...record,\r\n      ...ownProps,\r\n      [ownProps.type]: null\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...ownProps,\r\n    ...record\r\n  }\r\n}\r\n\r\nconst WithConsumer = withCrudConsumer(Model)\r\n\r\nexport default withData(mapRecordsToProps, mergeProps)(WithConsumer)\r\n\r\nModel.propTypes = {\r\n  type: PropTypes.string,\r\n  id: PropTypes.string,\r\n  buildRecord: PropTypes.func,\r\n  addRecord: PropTypes.func,\r\n  updateRecord: PropTypes.func,\r\n  removeRecord: PropTypes.func,\r\n  beforeAdd: PropTypes.func,\r\n  onAdd: PropTypes.func,\r\n  beforeUpdate: PropTypes.func,\r\n  onUpdate: PropTypes.func,\r\n  beforeRemove: PropTypes.func,\r\n  onRemove: PropTypes.func,\r\n  related: PropTypes.bool,\r\n  required: PropTypes.bool\r\n}"]}]}
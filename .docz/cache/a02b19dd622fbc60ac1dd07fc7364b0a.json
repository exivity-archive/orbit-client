{"remainingRequest":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"@babel/preset-env\",{\"useBuiltIns\":\"entry\",\"modules\":false}],\"@babel/preset-react\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",\"babel-plugin-styled-components\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"env\":{\"test\":{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\"]}},\"cacheDirectory\":true,\"babelrc\":false}!c:\\code\\exivity\\orbit-client\\src\\Record.js","dependencies":[{"path":"c:\\code\\exivity\\orbit-client\\src\\Record.js","mtime":1542374971249},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541623259616},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js","mtime":1539941072245}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Record.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withData } from 'react-orbitjs';\nimport omit from 'lodash/omit';\nimport Crud from './Crud';\nimport withCrudConsumer from './crudConsumer';\nvar notAllowedProps = ['id', 'type', 'related', 'relatedTo', 'children', 'queryStore', 'updateStore', 'buildRecord', 'addRecord', 'updateRecord', 'removeRecord', 'cache'];\n\nvar updateState = function updateState(props, state) {\n  var scenarios = {\n    initializeRecord: !props.id && props.id !== state.idReference,\n    receivedNewId: !!props.id && props.id !== state.idReference,\n    receivedNewRecord: !!props[props.type] && props[props.type] !== state.recordReference,\n    recordNotFoundInCache: !!props.id && !props[props.type],\n    cacheOnly: props.cache === 'only'\n  };\n\n  if (scenarios.initializeRecord) {\n    var _ref;\n\n    var record = props.buildRecord(props.type);\n    return _ref = {\n      idReference: props.id,\n      recordReference: record\n    }, _defineProperty(_ref, props.type, record), _defineProperty(_ref, \"loading\", false), _defineProperty(_ref, \"error\", false), _ref;\n  }\n\n  if (scenarios.receivedNewId) {\n    var _ref3;\n\n    if (scenarios.recordNotFoundInCache) {\n      var _ref2;\n\n      return _ref2 = {\n        idReference: props.id,\n        recordReference: null\n      }, _defineProperty(_ref2, props.type, null), _defineProperty(_ref2, \"loading\", !scenarios.cacheOnly), _defineProperty(_ref2, \"error\", false), _ref2;\n    }\n\n    return _ref3 = {\n      idReference: props.id,\n      recordReference: props[props.type]\n    }, _defineProperty(_ref3, props.type, props[props.type]), _defineProperty(_ref3, \"loading\", false), _defineProperty(_ref3, \"error\", false), _ref3;\n  }\n\n  if (scenarios.receivedNewRecord) {\n    var _ref4;\n\n    return _ref4 = {\n      idReference: props.id,\n      recordReference: props[props.type]\n    }, _defineProperty(_ref4, props.type, props[props.type]), _defineProperty(_ref4, \"loading\", false), _defineProperty(_ref4, \"error\", false), _ref4;\n  }\n\n  return null;\n};\n\nvar updateStateRelated = function updateStateRelated(props, state) {\n  var scenarios = {\n    noRecordToRelateTo: !props.relatedTo,\n    relatedRecordNotFoundInCache: !!props.relatedTo && !props[props.type] && !state.searchedAllSources,\n    receivedNewRelatedRecord: !!props[props.type] && props[props.type] !== state.recordReference,\n    noRelatedRecord: !props[props.type] && state.searchedAllSources,\n    cacheOnly: props.cache === 'only'\n  };\n\n  if (scenarios.noRecordToRelateTo) {\n    var _ref5;\n\n    return _ref5 = {\n      recordReference: null\n    }, _defineProperty(_ref5, props.type, null), _defineProperty(_ref5, \"searchedAllSources\", false), _defineProperty(_ref5, \"loading\", false), _defineProperty(_ref5, \"error\", false), _ref5;\n  }\n\n  if (scenarios.relatedRecordNotFoundInCache) {\n    var _ref6;\n\n    return _ref6 = {\n      recordReference: null\n    }, _defineProperty(_ref6, props.type, null), _defineProperty(_ref6, \"loading\", !scenarios.cacheOnly), _defineProperty(_ref6, \"error\", false), _ref6;\n  }\n\n  if (scenarios.receivedNewRelatedRecord) {\n    var _ref7;\n\n    return _ref7 = {\n      recordReference: props[props.type]\n    }, _defineProperty(_ref7, props.type, props[props.type]), _defineProperty(_ref7, \"searchedAllSources\", false), _defineProperty(_ref7, \"loading\", false), _defineProperty(_ref7, \"error\", false), _ref7;\n  }\n\n  if (scenarios.noRelatedRecord && props.required) {\n    return {\n      loading: false,\n      error: {\n        message: \"Related \".concat(props.type, \" has not been found while being required\")\n      }\n    };\n  }\n\n  return null;\n};\n\nvar Record =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Record, _PureComponent);\n\n  function Record(props) {\n    var _this;\n\n    _classCallCheck(this, Record);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Record).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"queryStoreById\", function (id) {\n      _this.props.queryStore(function (q) {\n        return q.findRecord({\n          type: _this.props.type,\n          id: id\n        });\n      }).then(function () {\n        return _this.setState({\n          loading: false\n        });\n      }).catch(function (error) {\n        _this.setState({\n          loading: false,\n          error: error\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"queryStoreByRelation\", function (_ref8) {\n      var type = _ref8.type,\n          id = _ref8.id;\n\n      _this.props.queryStore(function (q) {\n        return q.findRelatedRecord({\n          type: type,\n          id: id\n        }, _this.props.type);\n      }).then(function () {\n        return _this.setState({\n          searchedAllSources: true,\n          loading: false\n        });\n      }).catch(function (error) {\n        _this.setState({\n          loading: false,\n          error: error\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"findAndSetProperty\", function (path, record, value) {\n      if (path.length === 1) {\n        record[path] = value;\n      } else {\n        _this.findAndSetProperty(path.slice(1), record[path[0]], value);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setPropertyByPath\", function (path) {\n      var newRecord = _objectSpread({}, _this.state[_this.props.type]);\n\n      if ((arguments.length <= 1 ? 0 : arguments.length - 1) === 2) {\n        return function () {\n          _this.findAndSetProperty(path, newRecord, value);\n\n          _this.setState(_defineProperty({}, _this.props.type, newRecord));\n        };\n      }\n\n      return function (value) {\n        _this.findAndSetProperty(path, newRecord, value);\n\n        _this.setState(_defineProperty({}, _this.props.type, newRecord));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setProperty\", function (property) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (args.length === 2) {\n        var nextProperty = args[0],\n            _value = args[1];\n        var val = property === 'relationships' ? {\n          data: _value\n        } : _value;\n        return function () {\n          return _this.setPropertyByPath([property, nextProperty], val)();\n        };\n      }\n\n      return function (value) {\n        var val = property === 'relationships' ? {\n          data: value\n        } : value;\n\n        _this.setPropertyByPath([property].concat(args), val)();\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setAttribute\", function () {\n      var _this2;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return (_this2 = _this).setProperty.apply(_this2, ['attributes'].concat(args));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setRelationship\", function () {\n      var _this3;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return (_this3 = _this).setProperty.apply(_this3, ['relationships'].concat(args));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"resetAttributes\", function (attributes) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      attributes.map(function (attribute) {\n        return _this.setPropertyByPath(['attributes', attribute], value);\n      })();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"beforeRemove\", function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      var beforeRemove = _this.props.beforeRemove;\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref9 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(resolve) {\n          var proceed;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!beforeRemove) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return beforeRemove.apply(void 0, args);\n\n                case 3:\n                  proceed = _context.sent;\n\n                  if (proceed) {\n                    _this.setState({\n                      loadingTransform: true\n                    });\n                  }\n\n                  resolve(proceed);\n                  _context.next = 10;\n                  break;\n\n                case 8:\n                  _this.setState({\n                    loadingTransform: true\n                  });\n\n                  resolve(true);\n\n                case 10:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onRemove\", function () {\n      var onRemove = _this.props.onRemove;\n      onRemove && onRemove.apply(void 0, arguments);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onError\", function (error) {\n      var onError = _this.props.onError;\n\n      _this.setState({\n        loadingTransform: false\n      });\n\n      onError && onError(error);\n    });\n\n    _this.state = {\n      idReference: null,\n      recordReference: null\n    };\n    return _this;\n  }\n\n  _createClass(Record, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          related = _this$props.related,\n          relatedTo = _this$props.relatedTo;\n      var loading = this.state.loading;\n\n      if (loading) {\n        if (related && relatedTo) {\n          this.queryStoreByRelation(relatedTo);\n        } else if (id) {\n          this.queryStoreById(id);\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          related = _this$props2.related,\n          relatedTo = _this$props2.relatedTo;\n      var loading = this.state.loading;\n\n      if (loading) {\n        if (related && relatedTo) {\n          this.queryStoreByRelation(relatedTo);\n        } else if (id) {\n          this.queryStoreById(id);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          type = _this$props3.type,\n          children = _this$props3.children,\n          relatedTo = _this$props3.relatedTo;\n      var record = this.state[type];\n      var receivedEntities = omit(this.props, notAllowedProps.concat([type]));\n      var relatedToRecord = !relatedTo && record && record.id ? record : relatedTo;\n      var queryStatus = {\n        loading: !!this.props.loading || this.state.loading || !!this.state.loadingTransform,\n        error: this.props.error || this.state.error\n      };\n      return React.createElement(Crud, Object.assign({}, this.props, {\n        beforeRemove: this.beforeRemove,\n        onRemove: this.onRemove,\n        onError: this.onError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), function (_ref10) {\n        var add = _ref10.add,\n            update = _ref10.update,\n            _remove = _ref10.remove;\n        var extendedRecord = record ? _objectSpread({}, record, {\n          setAttribute: _this4.setAttribute,\n          setRelationship: _this4.setRelationship,\n          resetAttributes: _this4.resetAttributes,\n          setProperty: _this4.setPropertyByPath,\n          save: record && !record.id ? function () {\n            for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n              args[_key5] = arguments[_key5];\n            }\n\n            return add.apply(void 0, [_objectSpread({}, record)].concat(args));\n          } : function () {\n            for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n              args[_key6] = arguments[_key6];\n            }\n\n            return update.apply(void 0, [_objectSpread({}, record)].concat(args));\n          },\n          remove: function remove() {\n            for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n              args[_key7] = arguments[_key7];\n            }\n\n            return _remove.apply(void 0, [_objectSpread({}, record)].concat(args));\n          }\n        }) : null;\n\n        if (queryStatus.loading || queryStatus.error) {\n          var propsToPass = _objectSpread(_defineProperty({}, type, null), queryStatus); // Child is component\n\n\n          if (typeof children !== 'function') {\n            if (children.type.displayName === 'Collection') {\n              return React.cloneElement(_this4.props.children, _objectSpread({\n                key: \"\".concat(type, \"-relatedTo-\").concat(relatedTo && relatedTo.id)\n              }, propsToPass, {\n                relatedTo: relatedToRecord\n              }));\n            } else {\n              return React.cloneElement(_this4.props.children, _objectSpread({}, propsToPass, {\n                relatedTo: relatedToRecord\n              }));\n            }\n          }\n\n          return children(propsToPass);\n        } // Child is component\n\n\n        if (typeof children !== 'function') {\n          if (children.type.displayName === 'Collection') {\n            return React.cloneElement(_this4.props.children, _objectSpread(_defineProperty({\n              key: \"\".concat(type, \"-relatedTo-\").concat(relatedTo && relatedTo.id)\n            }, type, extendedRecord), receivedEntities, {\n              relatedTo: relatedToRecord\n            }, queryStatus));\n          } else {\n            return React.cloneElement(_this4.props.children, _objectSpread(_defineProperty({}, type, extendedRecord), receivedEntities, {\n              relatedTo: relatedToRecord\n            }, queryStatus));\n          }\n        } // Child is a function - Provide record and status in callback\n\n\n        return children(_objectSpread(_defineProperty({}, type, extendedRecord), receivedEntities, queryStatus));\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      return props.related ? updateStateRelated(props, state) : updateState(props, state);\n    }\n  }]);\n\n  return Record;\n}(PureComponent);\n\nvar mapRecordsToProps = function mapRecordsToProps(_ref11) {\n  var id = _ref11.id,\n      type = _ref11.type,\n      related = _ref11.related,\n      relatedTo = _ref11.relatedTo,\n      cache = _ref11.cache;\n\n  if (cache === 'skip') {\n    return {};\n  }\n\n  if (id) {\n    return _defineProperty({}, type, function (q) {\n      return q.findRecord({\n        type: type,\n        id: id\n      });\n    });\n  }\n\n  if (related && relatedTo) {\n    return _defineProperty({}, type, function (q) {\n      return q.findRelatedRecord({\n        type: relatedTo.type,\n        id: relatedTo.id\n      }, type);\n    });\n  }\n\n  return {};\n};\n\nvar mergeProps = function mergeProps(record, ownProps) {\n  // Temporary fix for react-orbitjs not clearing last result when nothing is found\n  if (ownProps.related && ownProps.relatedTo && (!ownProps.relatedTo.relationships || !ownProps.relatedTo.relationships[ownProps.type])) {\n    return _objectSpread({}, record, ownProps, _defineProperty({}, ownProps.type, null));\n  } // Temporary fix for react-orbitjs not clearing last result when nothing is found\n\n\n  if (!ownProps.id && !ownProps.related) {\n    return _objectSpread({}, record, ownProps, _defineProperty({}, ownProps.type, null));\n  }\n\n  return _objectSpread({}, ownProps, record);\n};\n\nexport { Record };\nvar WithConsumer = withCrudConsumer(Record);\n\nvar _default = withData(mapRecordsToProps, mergeProps)(WithConsumer);\n\nexport default _default;\nRecord.defaultProps = {\n  relatedTo: null,\n  cache: 'auto'\n};\nRecord.propTypes = {\n  type: PropTypes.string,\n  id: PropTypes.string,\n  cache: PropTypes.oneOf(['only', 'skip', 'auto']),\n  buildRecord: PropTypes.func.isRequired,\n  addRecord: PropTypes.func.isRequired,\n  updateRecord: PropTypes.func.isRequired,\n  removeRecord: PropTypes.func.isRequired,\n  beforeAdd: PropTypes.func,\n  onAdd: PropTypes.func,\n  beforeUpdate: PropTypes.func,\n  onUpdate: PropTypes.func,\n  beforeRemove: PropTypes.func,\n  onRemove: PropTypes.func,\n  related: PropTypes.bool,\n  relatedTo: PropTypes.object,\n  required: PropTypes.bool\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(notAllowedProps, \"notAllowedProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Record.js\");\n  reactHotLoader.register(updateState, \"updateState\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Record.js\");\n  reactHotLoader.register(updateStateRelated, \"updateStateRelated\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Record.js\");\n  reactHotLoader.register(Record, \"Record\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Record.js\");\n  reactHotLoader.register(mapRecordsToProps, \"mapRecordsToProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Record.js\");\n  reactHotLoader.register(mergeProps, \"mergeProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Record.js\");\n  reactHotLoader.register(WithConsumer, \"WithConsumer\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Record.js\");\n  reactHotLoader.register(_default, \"default\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Record.js\");\n  leaveModule(module);\n})();\n\n;\nRecord.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"getDerivedStateFromProps\",\n    \"docblock\": null,\n    \"modifiers\": [\"static\"],\n    \"params\": [{\n      \"name\": \"props\",\n      \"type\": null\n    }, {\n      \"name\": \"state\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"queryStoreById\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"id\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"queryStoreByRelation\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"{ type, id }\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"findAndSetProperty\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"path\",\n      \"type\": null\n    }, {\n      \"name\": \"record\",\n      \"type\": null\n    }, {\n      \"name\": \"value\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setPropertyByPath\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"path\",\n      \"type\": null\n    }, {\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setProperty\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"property\",\n      \"type\": null\n    }, {\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setAttribute\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setRelationship\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"resetAttributes\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"attributes\",\n      \"type\": null\n    }, {\n      \"name\": \"value\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"beforeRemove\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onRemove\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onError\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"error\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Record\",\n  \"props\": {\n    \"relatedTo\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"cache\": {\n      \"defaultValue\": {\n        \"value\": \"'auto'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'only'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'skip'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'auto'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"buildRecord\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"addRecord\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"updateRecord\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"removeRecord\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"beforeAdd\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onAdd\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"beforeUpdate\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onUpdate\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"beforeRemove\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onRemove\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"related\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"required\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["c:\\code\\exivity\\orbit-client\\src\\Record.js"],"names":["React","PureComponent","PropTypes","withData","omit","Crud","withCrudConsumer","notAllowedProps","updateState","props","state","scenarios","initializeRecord","id","idReference","receivedNewId","receivedNewRecord","type","recordReference","recordNotFoundInCache","cacheOnly","cache","record","buildRecord","updateStateRelated","noRecordToRelateTo","relatedTo","relatedRecordNotFoundInCache","searchedAllSources","receivedNewRelatedRecord","noRelatedRecord","required","loading","error","message","Record","queryStore","q","findRecord","then","setState","catch","findRelatedRecord","path","value","length","findAndSetProperty","slice","newRecord","property","args","nextProperty","val","data","setPropertyByPath","setProperty","attributes","undefined","map","attribute","beforeRemove","Promise","resolve","proceed","loadingTransform","onRemove","onError","related","queryStoreByRelation","queryStoreById","children","receivedEntities","relatedToRecord","queryStatus","add","update","remove","extendedRecord","setAttribute","setRelationship","resetAttributes","save","propsToPass","displayName","cloneElement","key","mapRecordsToProps","mergeProps","ownProps","relationships","WithConsumer","defaultProps","propTypes","string","oneOf","func","isRequired","addRecord","updateRecord","removeRecord","beforeAdd","onAdd","beforeUpdate","onUpdate","bool","object"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withData } from 'react-orbitjs'\r\nimport omit from 'lodash/omit'\r\n\r\nimport Crud from './Crud'\r\nimport withCrudConsumer from './crudConsumer'\r\n\r\nconst notAllowedProps = ['id', 'type', 'related', 'relatedTo', 'children', 'queryStore', 'updateStore',\r\n'buildRecord', 'addRecord', 'updateRecord', 'removeRecord', 'cache']\r\n\r\nconst updateState = (props, state) => {\r\n  const scenarios = {\r\n    initializeRecord: !props.id && (props.id !== state.idReference),\r\n    receivedNewId: !!props.id && (props.id !== state.idReference),\r\n    receivedNewRecord: !!props[props.type] && (props[props.type] !== state.recordReference),\r\n    recordNotFoundInCache: !!props.id && !props[props.type],\r\n    cacheOnly: props.cache === 'only'\r\n  }\r\n\r\n  if (scenarios.initializeRecord) {\r\n    const record = props.buildRecord(props.type)\r\n\r\n    return {\r\n      idReference: props.id,\r\n      recordReference: record,\r\n      [props.type]: record,\r\n      loading: false,\r\n      error: false\r\n    }\r\n  }\r\n\r\n  if (scenarios.receivedNewId) {\r\n    if (scenarios.recordNotFoundInCache) {\r\n      return {\r\n        idReference: props.id,\r\n        recordReference: null,\r\n        [props.type]: null,\r\n        loading: !scenarios.cacheOnly,\r\n        error: false\r\n      }\r\n    }\r\n\r\n    return {\r\n      idReference: props.id,\r\n      recordReference: props[props.type],\r\n      [props.type]: props[props.type],\r\n      loading: false,\r\n      error: false\r\n    }\r\n  }\r\n\r\n  if (scenarios.receivedNewRecord) {\r\n    return {\r\n      idReference: props.id,\r\n      recordReference: props[props.type],\r\n      [props.type]: props[props.type],\r\n      loading: false,\r\n      error: false\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst updateStateRelated = (props, state) => {\r\n  const scenarios = {\r\n    noRecordToRelateTo: !props.relatedTo,\r\n    relatedRecordNotFoundInCache: !!props.relatedTo && !props[props.type] && !state.searchedAllSources,\r\n    receivedNewRelatedRecord: !!props[props.type] && (props[props.type] !== state.recordReference),\r\n    noRelatedRecord: !props[props.type] && state.searchedAllSources,\r\n    cacheOnly: props.cache === 'only'\r\n  }\r\n\r\n  if (scenarios.noRecordToRelateTo) {\r\n    return {\r\n      recordReference: null,\r\n      [props.type]: null,\r\n      searchedAllSources: false,\r\n      loading: false,\r\n      error: false\r\n    }\r\n  }\r\n\r\n  if (scenarios.relatedRecordNotFoundInCache) {\r\n    return {\r\n      recordReference: null,\r\n      [props.type]: null,\r\n      loading: !scenarios.cacheOnly,\r\n      error: false\r\n    }\r\n  }\r\n\r\n  if (scenarios.receivedNewRelatedRecord) {\r\n    return {\r\n      recordReference: props[props.type],\r\n      [props.type]: props[props.type],\r\n      searchedAllSources: false,\r\n      loading: false,\r\n      error: false\r\n    }\r\n  }\r\n\r\n  if (scenarios.noRelatedRecord && props.required) {\r\n    return {\r\n      loading: false,\r\n      error: {\r\n        message: `Related ${props.type} has not been found while being required`\r\n      }\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nclass Record extends PureComponent {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      idReference: null,\r\n      recordReference: null,\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps (props, state) {\r\n    return props.related ? updateStateRelated(props, state) : updateState(props, state)\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { id, related, relatedTo } = this.props\r\n    const { loading } = this.state\r\n\r\n    if (loading) {\r\n      if (related && relatedTo) {\r\n        this.queryStoreByRelation(relatedTo)\r\n      } else if (id) {\r\n        this.queryStoreById(id)\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    const { id, related, relatedTo } = this.props\r\n    const { loading } = this.state\r\n\r\n    if (loading) {\r\n      if (related && relatedTo) {\r\n        this.queryStoreByRelation(relatedTo)\r\n      } else if (id) {\r\n        this.queryStoreById(id)\r\n      }\r\n    }\r\n  }\r\n\r\n  queryStoreById = (id) => {\r\n    this.props.queryStore(q => q.findRecord({ type: this.props.type, id }))\r\n      .then(() => this.setState({ loading: false }))\r\n      .catch((error) => {\r\n        this.setState({\r\n          loading: false,\r\n          error\r\n        })\r\n      })\r\n  }\r\n\r\n  queryStoreByRelation = ({ type, id }) => {\r\n    this.props.queryStore(q => q.findRelatedRecord({ type, id }, this.props.type))\r\n      .then(() => this.setState({\r\n        searchedAllSources: true,\r\n        loading: false,\r\n      }))\r\n      .catch((error) => {\r\n        this.setState({\r\n          loading: false,\r\n          error\r\n        })\r\n      })\r\n  }\r\n\r\n  findAndSetProperty = (path, record, value) => {\r\n    if (path.length === 1) {\r\n      record[path] = value\r\n    } else {\r\n      this.findAndSetProperty(path.slice(1), record[path[0]], value)\r\n    }\r\n  }\r\n\r\n  setPropertyByPath = (path, ...args) => {\r\n    const newRecord = { ...this.state[this.props.type] }\r\n\r\n    if (args.length === 2) {\r\n      return () => {\r\n        this.findAndSetProperty(path, newRecord, value)\r\n        this.setState({ [this.props.type]: newRecord })\r\n      }\r\n    }\r\n\r\n    return (value) => {\r\n      this.findAndSetProperty(path, newRecord, value)\r\n      this.setState({ [this.props.type]: newRecord })  \r\n    }\r\n  }\r\n\r\n  setProperty = (property, ...args) => {\r\n    if (args.length === 2) {\r\n      const [nextProperty, value] = args\r\n      const val = property === 'relationships' ? { data: value } : value\r\n\r\n      return () => this.setPropertyByPath([property, nextProperty], val)()\r\n    }\r\n\r\n    return (value) => {\r\n      const val = property === 'relationships' ? { data: value } : value\r\n      this.setPropertyByPath([property, ...args], val)()\r\n    }\r\n  }\r\n\r\n  setAttribute = (...args) => this.setProperty('attributes', ...args)\r\n\r\n  setRelationship = (...args) => this.setProperty('relationships', ...args)\r\n\r\n  resetAttributes = (attributes, value = undefined) => {\r\n    attributes.map(attribute => this.setPropertyByPath(['attributes', attribute], value))()\r\n  }\r\n\r\n  beforeRemove = (...args) => {\r\n    const { beforeRemove } = this.props\r\n\r\n    return new Promise(async (resolve) => {\r\n      if (beforeRemove) {\r\n        const proceed = await beforeRemove(...args)\r\n\r\n        if (proceed) {\r\n          this.setState({\r\n            loadingTransform: true\r\n          })\r\n        }\r\n\r\n        resolve(proceed)\r\n      } else {\r\n        this.setState({\r\n          loadingTransform: true\r\n        })\r\n\r\n        resolve(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  onRemove = (...args) => {\r\n    const { onRemove } = this.props\r\n\r\n    onRemove && onRemove(...args)\r\n  }\r\n\r\n  onError = (error) => {\r\n    const { onError } = this.props\r\n\r\n    this.setState({\r\n      loadingTransform: false,\r\n    })\r\n\r\n    onError && onError(error)\r\n  }\r\n\r\n  render () {\r\n    const { type, children, relatedTo } = this.props\r\n    const { [type]: record } = this.state\r\n    const receivedEntities = omit(this.props, [...notAllowedProps, type])\r\n\r\n    const relatedToRecord = !relatedTo && (record && record.id) ? record : relatedTo\r\n\r\n    const queryStatus = {\r\n      loading: !!this.props.loading || this.state.loading || !!this.state.loadingTransform,\r\n      error: this.props.error || this.state.error\r\n    }\r\n\r\n    return (\r\n      <Crud {...this.props} beforeRemove={this.beforeRemove} onRemove={this.onRemove} onError={this.onError}>\r\n        {({ add, update, remove }) => {\r\n          const extendedRecord = record\r\n            ?  {\r\n              ...record,\r\n              setAttribute: this.setAttribute,\r\n              setRelationship: this.setRelationship,\r\n              resetAttributes: this.resetAttributes,\r\n              setProperty: this.setPropertyByPath,\r\n              save: record && !record.id\r\n                ? (...args) => add({...record}, ...args)\r\n                : (...args) => update({...record}, ...args),\r\n              remove: (...args) => remove({...record}, ...args)\r\n            }\r\n            : null\r\n\r\n          if (queryStatus.loading || queryStatus.error) {\r\n            const propsToPass = {\r\n              [type]: null,\r\n              ...queryStatus\r\n            }\r\n\r\n            // Child is component\r\n            if (typeof children !== 'function') {\r\n              if (children.type.displayName === 'Collection') {\r\n                return React.cloneElement(\r\n                  this.props.children,\r\n                  {\r\n                    key: `${type}-relatedTo-${relatedTo && relatedTo.id}`,\r\n                    ...propsToPass,\r\n                    relatedTo: relatedToRecord\r\n                  },\r\n                )\r\n              } else {\r\n                return React.cloneElement(\r\n                  this.props.children,\r\n                  {\r\n                    ...propsToPass,\r\n                    relatedTo: relatedToRecord\r\n                  },\r\n                )\r\n              }\r\n            }\r\n\r\n            return children(propsToPass)\r\n          }\r\n\r\n          // Child is component\r\n          if (typeof children !== 'function') {\r\n            if (children.type.displayName === 'Collection') {\r\n              return React.cloneElement(\r\n                this.props.children,\r\n                {\r\n                  key: `${type}-relatedTo-${relatedTo && relatedTo.id}`,\r\n                  [type]: extendedRecord,\r\n                  ...receivedEntities,\r\n                  relatedTo: relatedToRecord,\r\n                  ...queryStatus\r\n                }\r\n              )\r\n            } else {\r\n              return React.cloneElement(\r\n                this.props.children,\r\n                {\r\n                  [type]: extendedRecord,\r\n                  ...receivedEntities,\r\n                  relatedTo: relatedToRecord,\r\n                  ...queryStatus\r\n                }\r\n              )\r\n            }\r\n          }\r\n\r\n          // Child is a function - Provide record and status in callback\r\n          return children({\r\n            [type]: extendedRecord,\r\n            ...receivedEntities,\r\n            ...queryStatus\r\n          })\r\n        }}\r\n      </Crud>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapRecordsToProps = ({ id, type, related, relatedTo, cache }) => {\r\n  if (cache === 'skip') {\r\n    return {}\r\n  }\r\n\r\n  if (id) {\r\n    return { [type]: q => q.findRecord({ type, id }) }\r\n  }\r\n\r\n  if (related && relatedTo) {\r\n    return { [type]: q => q.findRelatedRecord({ type: relatedTo.type, id: relatedTo.id }, type) }\r\n  }\r\n\r\n  return {}\r\n}\r\n\r\n\r\nconst mergeProps = (record, ownProps) => {\r\n  // Temporary fix for react-orbitjs not clearing last result when nothing is found\r\n  if (ownProps.related && ownProps.relatedTo && (!ownProps.relatedTo.relationships || !ownProps.relatedTo.relationships[ownProps.type])) {\r\n    return {\r\n      ...record,\r\n      ...ownProps,\r\n      [ownProps.type]: null\r\n    }\r\n  }\r\n\r\n  // Temporary fix for react-orbitjs not clearing last result when nothing is found\r\n  if (!ownProps.id && !ownProps.related) {\r\n    return {\r\n      ...record,\r\n      ...ownProps,\r\n      [ownProps.type]: null\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...ownProps,\r\n    ...record\r\n  }\r\n}\r\n\r\nexport { Record }\r\n\r\nconst WithConsumer = withCrudConsumer(Record)\r\n\r\nexport default withData(mapRecordsToProps, mergeProps)(WithConsumer)\r\n\r\nRecord.defaultProps = {\r\n  relatedTo: null,\r\n  cache: 'auto',\r\n}\r\n\r\nRecord.propTypes = {\r\n  type: PropTypes.string,\r\n  id: PropTypes.string,\r\n  cache: PropTypes.oneOf([\r\n    'only',\r\n    'skip',\r\n    'auto'\r\n  ]),\r\n  buildRecord: PropTypes.func.isRequired,\r\n  addRecord: PropTypes.func.isRequired,\r\n  updateRecord: PropTypes.func.isRequired,\r\n  removeRecord: PropTypes.func.isRequired,\r\n  beforeAdd: PropTypes.func,\r\n  onAdd: PropTypes.func,\r\n  beforeUpdate: PropTypes.func,\r\n  onUpdate: PropTypes.func,\r\n  beforeRemove: PropTypes.func,\r\n  onRemove: PropTypes.func,\r\n  related: PropTypes.bool,\r\n  relatedTo: PropTypes.object,\r\n  required: PropTypes.bool\r\n}\r\n"]}]}
{"remainingRequest":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"@babel/preset-env\",{\"useBuiltIns\":\"entry\",\"modules\":false}],\"@babel/preset-react\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",\"babel-plugin-styled-components\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"env\":{\"test\":{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\"]}},\"cacheDirectory\":true,\"babelrc\":false}!c:\\code\\exivity\\orbit-client\\src\\Collection.js","dependencies":[{"path":"c:\\code\\exivity\\orbit-client\\src\\Collection.js","mtime":1542016847224},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541623259616},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js","mtime":1539941072245}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withData } from 'react-orbitjs';\nimport pluralize from 'pluralize';\nimport omit from 'lodash/omit';\nimport decorateQuery from './utils/decorateQuery';\nvar notAllowedProps = ['id', 'type', 'related', 'relatedTo', 'children', 'queryStore', 'updateStore', 'plural'];\n\nvar Collection =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Collection, _PureComponent);\n\n  function Collection(props) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"startQuery\", function (query) {\n      _this.setState({\n        loading: true,\n        error: false\n      }, query);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"query\", function () {\n      var _this$props = _this.props,\n          queryStore = _this$props.queryStore,\n          type = _this$props.type;\n      queryStore(function (q) {\n        return q.findRecords(type);\n      }).then(function () {\n        return _this.setState({\n          loading: false\n        });\n      }).catch(function (error) {\n        _this.setState({\n          loading: false,\n          error: error\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"queryRelated\", function () {\n      var _this$props2 = _this.props,\n          queryStore = _this$props2.queryStore,\n          relatedTo = _this$props2.relatedTo;\n      queryStore(function (q) {\n        return q.findRelatedRecords({\n          type: relatedTo.type,\n          id: relatedTo.id\n        }, _this.pluralizedType);\n      }).then(function () {\n        return _this.setState({\n          loading: false\n        });\n      }).catch(function (error) {\n        _this.setState({\n          loading: false,\n          error: error\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"findOne\", function (id) {\n      var records = _this.props[_this.props.type];\n      return records.find(function (item) {\n        return item.id === id;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"find\", function (ids) {\n      var records = _this.props[_this.props.type];\n      return ids.map(function (id) {\n        return records.find(function (item) {\n          return item.id === id;\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"findByAttribute\", function (_ref) {\n      var attribute = _ref.attribute,\n          value = _ref.value;\n      var records = _this.props[_this.props.type];\n      return records.filter(function (item) {\n        return item.attributes[attribute] === value;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"buildSaveTransforms\", function (records) {\n      return function (t) {\n        return records.map(function (record) {\n          if (record.id) {\n            return t.replaceRecord(record);\n          }\n\n          return t.addRecord(record);\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"buildRemoveTransforms\", function (records) {\n      return function (t) {\n        return records.map(function (record) {\n          return t.removeRecord(record);\n        });\n      };\n    });\n\n    _this.pluralizedType = props.plural || pluralize(props.type);\n    _this.state = {\n      loading: false,\n      error: false\n    };\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3 = this.props,\n          records = _this$props3[this.pluralizedType],\n          related = _this$props3.related,\n          relatedTo = _this$props3.relatedTo,\n          cacheOnly = _this$props3.cacheOnly;\n      if (records.length || cacheOnly) return null;\n      if (related && relatedTo) this.startQuery(this.queryRelated);\n      if (!related) this.startQuery(this.query);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _objectSpread3;\n\n      var _this$props4 = this.props,\n          records = _this$props4[this.pluralizedType],\n          type = _this$props4.type,\n          relatedTo = _this$props4.relatedTo,\n          updateStore = _this$props4.updateStore,\n          children = _this$props4.children;\n      var receivedEntities = omit(this.props, notAllowedProps.concat([type]));\n      var queryStatus = {\n        loading: !!this.props.loading || this.state.loading,\n        error: this.props.error || this.state.error\n      };\n      var extendedRecords = {\n        findOne: this.findOne,\n        find: this.find,\n        findByAttribute: this.findByAttribute,\n        all: function all() {\n          return records;\n        }\n      };\n\n      if (queryStatus.loading || queryStatus.error) {\n        var _propsToPass = _objectSpread(_defineProperty({}, this.pluralizedType, null), queryStatus);\n\n        if (typeof children !== 'function') {\n          // Child is component\n          return React.cloneElement(children, _propsToPass);\n        }\n\n        return children(_propsToPass);\n      }\n\n      var propsToPass = _objectSpread({}, receivedEntities, (_objectSpread3 = {}, _defineProperty(_objectSpread3, this.pluralizedType, extendedRecords), _defineProperty(_objectSpread3, \"save\", function save(records) {\n        return updateStore(_this2.buildSaveTransforms(records));\n      }), _defineProperty(_objectSpread3, \"remove\", function remove(records) {\n        return updateStore(_this2.buildRemoveTransforms(records));\n      }), _objectSpread3), queryStatus);\n\n      if (typeof this.props.children !== 'function') {\n        // Child is component\n        return React.cloneElement(children, _objectSpread({}, propsToPass, {\n          relatedTo: relatedTo\n        }));\n      } // Child is a function\n\n\n      return children(propsToPass);\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Collection;\n}(PureComponent);\n\nvar mapRecordsToProps = function mapRecordsToProps(_ref2) {\n  var type = _ref2.type,\n      plural = _ref2.plural,\n      related = _ref2.related,\n      relatedTo = _ref2.relatedTo,\n      sort = _ref2.sort,\n      filter = _ref2.filter,\n      page = _ref2.page;\n  var pluralizedType = plural || pluralize(type);\n\n  if (related && relatedTo) {\n    return _defineProperty({}, pluralizedType, function (q) {\n      return q.findRelatedRecords({\n        type: relatedTo.type,\n        id: relatedTo.id\n      }, pluralizedType);\n    });\n  }\n\n  if (!related) {\n    return _defineProperty({}, pluralizedType, decorateQuery(function (q) {\n      return q.findRecords(type);\n    }, {\n      sort: sort,\n      filter: filter,\n      page: page\n    }));\n  }\n\n  return {};\n}; // Temp workaround for react-orbitjs not being able to handle other returns then functions\n\n\nvar mergeProps = function mergeProps(record, ownProps) {\n  var pluralizedType = ownProps.plural || pluralize(ownProps.type);\n\n  if (ownProps.related && !ownProps.relatedTo) {\n    return _objectSpread({}, record, ownProps, _defineProperty({}, pluralizedType, []));\n  }\n\n  return _objectSpread({}, record, ownProps);\n};\n\nexport { Collection };\n\nvar _default = withData(mapRecordsToProps, mergeProps)(Collection);\n\nexport default _default;\nCollection.displayName = 'Collection';\nCollection.propTypes = {\n  type: PropTypes.string,\n  plural: PropTypes.string,\n  related: PropTypes.bool,\n  cacheOnly: PropTypes.bool,\n  queryStore: PropTypes.func,\n  updateStore: PropTypes.func,\n  sort: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  filter: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  page: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(notAllowedProps, \"notAllowedProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Collection.js\");\n  reactHotLoader.register(Collection, \"Collection\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Collection.js\");\n  reactHotLoader.register(mapRecordsToProps, \"mapRecordsToProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Collection.js\");\n  reactHotLoader.register(mergeProps, \"mergeProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Collection.js\");\n  reactHotLoader.register(_default, \"default\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Collection.js\");\n  leaveModule(module);\n})();\n\n;\nCollection.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"startQuery\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"query\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"query\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"queryRelated\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"findOne\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"id\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"find\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"ids\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"findByAttribute\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"{ attribute, value }\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"buildSaveTransforms\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"records\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"buildRemoveTransforms\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"records\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Collection\",\n  \"props\": {\n    \"type\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"plural\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"related\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"cacheOnly\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"queryStore\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"updateStore\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"sort\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"object\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"filter\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"object\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"page\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"number\"\n        }, {\n          \"name\": \"object\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["c:\\code\\exivity\\orbit-client\\src\\Collection.js"],"names":["React","PureComponent","PropTypes","withData","pluralize","omit","decorateQuery","notAllowedProps","Collection","props","query","setState","loading","error","queryStore","type","q","findRecords","then","catch","relatedTo","findRelatedRecords","id","pluralizedType","records","find","item","ids","map","attribute","value","filter","attributes","t","record","replaceRecord","addRecord","removeRecord","plural","state","related","cacheOnly","length","startQuery","queryRelated","updateStore","children","receivedEntities","queryStatus","extendedRecords","findOne","findByAttribute","all","propsToPass","cloneElement","buildSaveTransforms","buildRemoveTransforms","mapRecordsToProps","sort","page","mergeProps","ownProps","displayName","propTypes","string","bool","func","oneOfType","object","number"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withData } from 'react-orbitjs'\r\nimport pluralize from 'pluralize'\r\nimport omit from 'lodash/omit'\r\n\r\nimport decorateQuery from './utils/decorateQuery'\r\n\r\nconst notAllowedProps = ['id', 'type', 'related', 'relatedTo', 'children', 'queryStore', 'updateStore', 'plural']\r\n\r\nclass Collection extends PureComponent {\r\n  constructor (props) {\r\n    super (props)\r\n\r\n    this.pluralizedType = props.plural || pluralize(props.type)\r\n\r\n    this.state = {\r\n      loading: false,\r\n      error: false\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { [this.pluralizedType]: records, related, relatedTo, cacheOnly } = this.props\r\n\r\n    if (records.length || cacheOnly) return null\r\n    if (related && relatedTo) this.startQuery(this.queryRelated)\r\n    if (!related) this.startQuery(this.query)\r\n  }\r\n\r\n  startQuery = (query) => {\r\n    this.setState({\r\n      loading: true,\r\n      error: false,\r\n    }, query)\r\n  }\r\n\r\n  query = () => {\r\n    const { queryStore, type } = this.props\r\n\r\n    queryStore(q => q.findRecords(type))\r\n      .then(() => this.setState({ loading: false }))\r\n      .catch((error) => {\r\n        this.setState({\r\n          loading: false,\r\n          error\r\n        })\r\n      })\r\n  }\r\n\r\n  queryRelated = () => {\r\n    const { queryStore, relatedTo } = this.props\r\n\r\n    queryStore(q => q.findRelatedRecords({ type: relatedTo.type, id: relatedTo.id }, this.pluralizedType))\r\n      .then(() => this.setState({ loading: false }))\r\n      .catch((error) => {\r\n        this.setState({\r\n          loading: false,\r\n          error\r\n        })\r\n      })\r\n  }\r\n\r\n  findOne = (id) => {\r\n    const { [this.props.type]: records } = this.props\r\n\r\n    return records.find(item => item.id === id)\r\n  }\r\n\r\n  find = (ids) => {\r\n    const { [this.props.type]: records } = this.props\r\n\r\n    return ids.map(id => records.find(item => item.id === id))\r\n  }\r\n\r\n  findByAttribute = ({ attribute, value }) => {\r\n    const { [this.props.type]: records } = this.props\r\n\r\n    return records.filter(item => item.attributes[attribute] === value)\r\n  }\r\n\r\n  buildSaveTransforms = (records) => (t) => records.map((record) => {\r\n    if (record.id) {\r\n      return t.replaceRecord(record)\r\n    }\r\n\r\n    return t.addRecord(record)\r\n  })\r\n\r\n  buildRemoveTransforms = (records) => (t) => records.map((record) => {\r\n    return t.removeRecord(record)\r\n  })\r\n\r\n  render () {\r\n    const { [this.pluralizedType]: records, type, relatedTo, updateStore, children } = this.props\r\n    const receivedEntities = omit(this.props, [...notAllowedProps, type])\r\n\r\n    const queryStatus = {\r\n      loading: !!this.props.loading || this.state.loading,\r\n      error: this.props.error || this.state.error\r\n    }\r\n\r\n    const extendedRecords = {\r\n      findOne: this.findOne,\r\n      find: this.find,\r\n      findByAttribute: this.findByAttribute,\r\n      all: () => records\r\n    }\r\n\r\n    if (queryStatus.loading || queryStatus.error) {\r\n      const propsToPass = {\r\n        [this.pluralizedType]: null,\r\n        ...queryStatus\r\n      }\r\n\r\n      if (typeof children !== 'function') {\r\n        // Child is component\r\n        return React.cloneElement(\r\n          children,\r\n          propsToPass\r\n        )\r\n      }\r\n\r\n      return children(propsToPass)\r\n    }\r\n\r\n    const propsToPass = {\r\n      ...receivedEntities,\r\n      [this.pluralizedType]: extendedRecords,\r\n      save: (records) => updateStore(this.buildSaveTransforms(records)),\r\n      remove: (records) => updateStore(this.buildRemoveTransforms(records)),\r\n      ...queryStatus\r\n    }\r\n\r\n    if (typeof this.props.children !== 'function') {\r\n      // Child is component\r\n      return React.cloneElement(\r\n        children,\r\n        {\r\n          ...propsToPass,\r\n          relatedTo\r\n        }\r\n      )\r\n    }\r\n    // Child is a function\r\n    return children(propsToPass)\r\n  }\r\n}\r\n\r\nconst mapRecordsToProps = ({ type, plural, related, relatedTo, sort, filter, page }) => {\r\n  const pluralizedType = plural || pluralize(type)\r\n\r\n if (related && relatedTo) {\r\n    return {\r\n      [pluralizedType]: q => q.findRelatedRecords({ type: relatedTo.type, id: relatedTo.id }, pluralizedType),\r\n    }\r\n  }\r\n\r\n  if (!related) {\r\n    return {\r\n      [pluralizedType]: decorateQuery(q => q.findRecords(type), { sort, filter, page }),\r\n    }\r\n  }\r\n\r\n  return {}\r\n}\r\n\r\n// Temp workaround for react-orbitjs not being able to handle other returns then functions\r\nconst mergeProps = (record, ownProps) => {\r\n  const pluralizedType = ownProps.plural || pluralize(ownProps.type)\r\n\r\n  if (ownProps.related && !ownProps.relatedTo) {\r\n    return {\r\n      ...record,\r\n      ...ownProps,\r\n      [pluralizedType]: []\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...record,\r\n    ...ownProps\r\n  }\r\n}\r\n\r\nexport { Collection }\r\n\r\nexport default withData(mapRecordsToProps, mergeProps)(Collection)\r\n\r\nCollection.displayName = 'Collection'\r\n\r\nCollection.propTypes = {\r\n  type: PropTypes.string,\r\n  plural: PropTypes.string,\r\n  related: PropTypes.bool,\r\n  cacheOnly: PropTypes.bool,\r\n  queryStore: PropTypes.func,\r\n  updateStore: PropTypes.func,\r\n  sort: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object\r\n  ]),\r\n  filter: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object\r\n  ]),\r\n  page: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.object\r\n  ])\r\n}\r\n"]}]}
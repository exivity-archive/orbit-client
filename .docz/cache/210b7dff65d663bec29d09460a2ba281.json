{"remainingRequest":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"@babel/preset-env\",{\"useBuiltIns\":\"entry\",\"modules\":false}],\"@babel/preset-react\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",\"babel-plugin-styled-components\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"env\":{\"test\":{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\"]}},\"cacheDirectory\":true,\"babelrc\":false}!c:\\code\\exivity\\orbit-client\\.docz\\docs\\index.mdx","dependencies":[{"path":"c:\\code\\exivity\\orbit-client\\.docz\\docs\\index.mdx","mtime":1541684703908},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541623259616},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js","mtime":1539941072245}],"contextDependencies":[],"result":["var _jsxFileName = \"c:\\\\code\\\\exivity\\\\orbit-client\\\\.docz\\\\docs\\\\index.mdx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport ReactJson from 'react-json-view';\nimport { Playground, PropsTable } from 'docz';\nimport Planet from '../../orbitStories/Planet';\n\nvar _default = function _default(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components,\n    props: {\n      \"id\": \"model\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Model\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"hi im a msx file\"), React.createElement(PropsTable, {\n    of: Planet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(Playground, {\n    __codesandbox: \"undefined\",\n    __position: 1,\n    __code: \"<Planet id=\\\"earth\\\">\\n  {({ planet }) => (\\n    <ReactJson\\n      name={planet.type}\\n      src={planet}\\n      shouldCollapse={field =>\\n        ['attributes', 'relationships'].includes(field.name)\\n      }\\n    />\\n  )}\\n</Planet>\",\n    __scope: {\n      props: props,\n      ReactJson: ReactJson,\n      Planet: Planet\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Planet, {\n    id: \"earth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, function (_ref2) {\n    var planet = _ref2.planet;\n    return React.createElement(ReactJson, {\n      name: planet.type,\n      src: planet,\n      shouldCollapse: function shouldCollapse(field) {\n        return ['attributes', 'relationships'].includes(field.name);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\.docz\\\\docs\\\\index.mdx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["c:\\code\\exivity\\orbit-client\\.docz\\docs\\index.mdx"],"names":["React","MDXTag","ReactJson","Playground","PropsTable","Planet","components","props","planet","type","field","includes","name"],"mappings":";;;;;;;;;;;;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACF,SAASC,UAAT,EAAqBC,UAArB,QAAuC,MAAvC;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;eAEe;AAAA,MAAEC,UAAF,QAAEA,UAAF;AAAA,MAAiBC,KAAjB;;AAAA,SAA4B,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAwB,IAAA,UAAU,EAAED,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgD,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,UAAU,EAAEA,UAA9B;AAA0C,IAAA,KAAK,EAAE;AAAC,YAAK;AAAN,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhD,EAE3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAF2C,EAG3C,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAED,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH2C,EAI3C,oBAAC,UAAD;AAAY,IAAA,aAAa,aAAzB;AAAwC,IAAA,UAAU,EAAE,CAApD;AAAuD,IAAA,MAAM,6OAA7D;AAUY,IAAA,OAAO,EAAE;AAACE,MAAAA,KAAK,EAALA,KAAD;AAAOL,MAAAA,SAAS,EAATA,SAAP;AAAiBG,MAAAA,MAAM,EAANA;AAAjB,KAVrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGG,MAAH,SAAGA,MAAH;AAAA,WACC,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEA,MAAM,CAACC,IAAxB;AAA8B,MAAA,GAAG,EAAED,MAAnC;AACE,MAAA,cAAc,EAAE,wBAACE,KAAD;AAAA,eAAW,CAAC,YAAD,EAAe,eAAf,EAAgCC,QAAhC,CAAyCD,KAAK,CAACE,IAA/C,CAAX;AAAA,OADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAAA,GADH,CAXF,CAJ2C,CAA5B;AAAA,C;;AAAf","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import ReactJson from 'react-json-view'\nimport { Playground, PropsTable } from 'docz'\nimport Planet from '../../orbitStories/Planet'\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"model\"}}>{`Model`}</MDXTag>\n\n<MDXTag name=\"p\" components={components}>{`hi im a msx file`}</MDXTag>\n<PropsTable of={Planet} />\n<Playground __codesandbox={`undefined`} __position={1} __code={`<Planet id=\"earth\">\n  {({ planet }) => (\n    <ReactJson\n      name={planet.type}\n      src={planet}\n      shouldCollapse={field =>\n        [\\'attributes\\', \\'relationships\\'].includes(field.name)\n      }\n    />\n  )}\n</Planet>`} __scope={{props,ReactJson,Planet}}>\n  <Planet id='earth'>\n    {({ planet }) => (\n      <ReactJson name={planet.type} src={planet}\n        shouldCollapse={(field) => ['attributes', 'relationships'].includes(field.name)} />\n    )}\n  </Planet>\n</Playground></MDXTag>\n  "]}]}
{"remainingRequest":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"@babel/preset-env\",{\"useBuiltIns\":\"entry\",\"modules\":false}],\"@babel/preset-react\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",\"babel-plugin-styled-components\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"env\":{\"test\":{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\"]}},\"cacheDirectory\":true,\"babelrc\":false}!c:\\code\\exivity\\orbit-client\\src\\Crud.js","dependencies":[{"path":"c:\\code\\exivity\\orbit-client\\src\\Crud.js","mtime":1541583638687},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541623259616},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js","mtime":1539941072245}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Crud =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Crud, _PureComponent);\n\n  function Crud() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Crud);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Crud)).call.apply(_getPrototypeOf2, [this].concat(_args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"build\", function () {\n      var buildRecord = _this.props.buildRecord;\n      return buildRecord.apply(void 0, arguments);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"add\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props,\n          beforeAdd,\n          addRecord,\n          onAdd,\n          onError,\n          _len2,\n          args,\n          _key2,\n          proceed,\n          fnArgs,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, beforeAdd = _this$props.beforeAdd, addRecord = _this$props.addRecord, onAdd = _this$props.onAdd, onError = _this$props.onError;\n\n              for (_len2 = _args2.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = _args2[_key2];\n              }\n\n              if (!beforeAdd) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 5;\n              return beforeAdd.apply(void 0, args);\n\n            case 5:\n              proceed = _context.sent;\n              fnArgs = proceed === true ? args : proceed;\n              if (proceed) addRecord.apply(void 0, _toConsumableArray(fnArgs)).then(onAdd).catch(onError);\n              _context.next = 11;\n              break;\n\n            case 10:\n              addRecord.apply(void 0, args).then(onAdd).catch(onError);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    })));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"update\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$props2,\n          beforeUpdate,\n          updateRecord,\n          onUpdate,\n          onError,\n          _len3,\n          args,\n          _key3,\n          proceed,\n          fnArgs,\n          _args3 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props2 = _this.props, beforeUpdate = _this$props2.beforeUpdate, updateRecord = _this$props2.updateRecord, onUpdate = _this$props2.onUpdate, onError = _this$props2.onError;\n\n              for (_len3 = _args3.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = _args3[_key3];\n              }\n\n              if (!beforeUpdate) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.next = 5;\n              return beforeUpdate.apply(void 0, args);\n\n            case 5:\n              proceed = _context2.sent;\n              fnArgs = proceed === true ? args : proceed;\n              if (proceed) updateRecord.apply(void 0, _toConsumableArray(fnArgs)).then(onUpdate).catch(onError);\n              _context2.next = 11;\n              break;\n\n            case 10:\n              updateRecord.apply(void 0, args).then(onUpdate).catch(onError);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    })));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"remove\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var _this$props3,\n          beforeRemove,\n          removeRecord,\n          onRemove,\n          onError,\n          _len4,\n          args,\n          _key4,\n          proceed,\n          fnArgs,\n          _args4 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$props3 = _this.props, beforeRemove = _this$props3.beforeRemove, removeRecord = _this$props3.removeRecord, onRemove = _this$props3.onRemove, onError = _this$props3.onError;\n\n              for (_len4 = _args4.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = _args4[_key4];\n              }\n\n              if (!beforeRemove) {\n                _context3.next = 10;\n                break;\n              }\n\n              _context3.next = 5;\n              return beforeRemove.apply(void 0, args);\n\n            case 5:\n              proceed = _context3.sent;\n              fnArgs = proceed === true ? args : proceed;\n              if (proceed) removeRecord.apply(void 0, _toConsumableArray(fnArgs)).then(onRemove).catch(onError);\n              _context3.next = 11;\n              break;\n\n            case 10:\n              removeRecord.apply(void 0, args).then(onRemove).catch(onError);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    })));\n\n    return _this;\n  }\n\n  _createClass(Crud, [{\n    key: \"render\",\n    value: function render() {\n      var handlers = {\n        build: this.build,\n        add: this.add,\n        update: this.update,\n        remove: this.remove\n      };\n      return this.props.children(handlers);\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Crud;\n}(PureComponent);\n\nCrud.propTypes = {\n  /**  Callback with build, add, update, remove promises. */\n  children: PropTypes.func.isRequired,\n\n  /** Function to build objectType. */\n  buildRecord: PropTypes.func,\n\n  /** Function to add record. */\n  addRecord: PropTypes.func,\n\n  /** Function to update record. */\n  updateRecord: PropTypes.func,\n\n  /** Function to remove record. */\n  removeRecord: PropTypes.func,\n\n  /** Callback called when add() resolves. Provides added record. */\n  onAdd: PropTypes.func,\n\n  /** Callback called when update() resolves. Provides updated record. */\n  onUpdate: PropTypes.func,\n\n  /** Callback called when remove() resolves. Provides removed record. */\n  onRemove: PropTypes.func,\n\n  /** Callback called before add(). Takes a promise or function.\r\n   Return truthy value to proceed with add() */\n  beforeAdd: PropTypes.func,\n\n  /** Callback called before update(). Takes a promise or function.\r\n   Return truthy value to proceed with update() */\n  beforeUpdate: PropTypes.func,\n\n  /** Callback called before remove(). Takes a promise or function.\r\n   Return truthy value to proceed with remove() */\n  beforeRemove: PropTypes.func,\n\n  /** Callback called when one of crud function catches */\n  onError: PropTypes.func\n};\nCrud.defaultProps = {\n  buildRecord: function buildRecord() {},\n  addRecord: function addRecord() {},\n  updateRecord: function updateRecord() {},\n  removeRecord: function removeRecord() {},\n  onAdd: function onAdd() {},\n  onUpdate: function onUpdate() {},\n  onRemove: function onRemove() {},\n  onError: function onError() {}\n};\nvar _default = Crud;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Crud, \"Crud\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Crud.js\");\n  reactHotLoader.register(_default, \"default\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\Crud.js\");\n  leaveModule(module);\n})();\n\n;\nCrud.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"build\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"add\",\n    \"docblock\": null,\n    \"modifiers\": [\"async\"],\n    \"params\": [{\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"update\",\n    \"docblock\": null,\n    \"modifiers\": [\"async\"],\n    \"params\": [{\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"remove\",\n    \"docblock\": null,\n    \"modifiers\": [\"async\"],\n    \"params\": [{\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Crud\",\n  \"props\": {\n    \"buildRecord\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function to build objectType.\"\n    },\n    \"addRecord\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function to add record.\"\n    },\n    \"updateRecord\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function to update record.\"\n    },\n    \"removeRecord\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function to remove record.\"\n    },\n    \"onAdd\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called when add() resolves. Provides added record.\"\n    },\n    \"onUpdate\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called when update() resolves. Provides updated record.\"\n    },\n    \"onRemove\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called when remove() resolves. Provides removed record.\"\n    },\n    \"onError\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called when one of crud function catches\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"Callback with build, add, update, remove promises.\"\n    },\n    \"beforeAdd\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called before add(). Takes a promise or function.\\r\\n   Return truthy value to proceed with add()\"\n    },\n    \"beforeUpdate\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called before update(). Takes a promise or function.\\r\\n   Return truthy value to proceed with update()\"\n    },\n    \"beforeRemove\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Callback called before remove(). Takes a promise or function.\\r\\n   Return truthy value to proceed with remove()\"\n    }\n  }\n};",{"version":3,"sources":["c:\\code\\exivity\\orbit-client\\src\\Crud.js"],"names":["React","PureComponent","PropTypes","Crud","buildRecord","props","beforeAdd","addRecord","onAdd","onError","args","proceed","fnArgs","then","catch","beforeUpdate","updateRecord","onUpdate","beforeRemove","removeRecord","onRemove","handlers","build","add","update","remove","children","propTypes","func","isRequired","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,I;;;;;;;;;;;;;;;;;;oFACI,YAAa;AAAA,UACXC,WADW,GACK,MAAKC,KADV,CACXD,WADW;AAEnB,aAAOA,WAAW,MAAX,mBAAP;AACD,K;;;;;;6BAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAC6C,MAAKC,KADlD,EACIC,SADJ,eACIA,SADJ,EACeC,SADf,eACeA,SADf,EAC0BC,KAD1B,eAC0BA,KAD1B,EACiCC,OADjC,eACiCA,OADjC;;AAAA,0CAAUC,IAAV;AAAUA,gBAAAA,IAAV;AAAA;;AAAA,mBAGAJ,SAHA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIoBA,SAAS,MAAT,SAAaI,IAAb,CAJpB;;AAAA;AAIIC,cAAAA,OAJJ;AAKIC,cAAAA,MALJ,GAKaD,OAAO,KAAK,IAAZ,GAAmBD,IAAnB,GAA0BC,OALvC;AAOF,kBAAIA,OAAJ,EAAaJ,SAAS,MAAT,4BAAaK,MAAb,GAAqBC,IAArB,CAA0BL,KAA1B,EAAiCM,KAAjC,CAAuCL,OAAvC;AAPX;AAAA;;AAAA;AASFF,cAAAA,SAAS,MAAT,SAAaG,IAAb,EAAmBG,IAAnB,CAAwBL,KAAxB,EAA+BM,KAA/B,CAAqCL,OAArC;;AATE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;6BAaG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BACmD,MAAKJ,KADxD,EACCU,YADD,gBACCA,YADD,EACeC,YADf,gBACeA,YADf,EAC6BC,QAD7B,gBAC6BA,QAD7B,EACuCR,OADvC,gBACuCA,OADvC;;AAAA,0CAAUC,IAAV;AAAUA,gBAAAA,IAAV;AAAA;;AAAA,mBAGHK,YAHG;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIiBA,YAAY,MAAZ,SAAgBL,IAAhB,CAJjB;;AAAA;AAICC,cAAAA,OAJD;AAKCC,cAAAA,MALD,GAKUD,OAAO,KAAK,IAAZ,GAAmBD,IAAnB,GAA0BC,OALpC;AAOL,kBAAIA,OAAJ,EAAaK,YAAY,MAAZ,4BAAgBJ,MAAhB,GAAwBC,IAAxB,CAA6BI,QAA7B,EAAuCH,KAAvC,CAA6CL,OAA7C;AAPR;AAAA;;AAAA;AASLO,cAAAA,YAAY,MAAZ,SAAgBN,IAAhB,EAAsBG,IAAtB,CAA2BI,QAA3B,EAAqCH,KAArC,CAA2CL,OAA3C;;AATK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;6BAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BACmD,MAAKJ,KADxD,EACCa,YADD,gBACCA,YADD,EACeC,YADf,gBACeA,YADf,EAC6BC,QAD7B,gBAC6BA,QAD7B,EACuCX,OADvC,gBACuCA,OADvC;;AAAA,0CAAUC,IAAV;AAAUA,gBAAAA,IAAV;AAAA;;AAAA,mBAGHQ,YAHG;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIiBA,YAAY,MAAZ,SAAgBR,IAAhB,CAJjB;;AAAA;AAICC,cAAAA,OAJD;AAKCC,cAAAA,MALD,GAKUD,OAAO,KAAK,IAAZ,GAAmBD,IAAnB,GAA0BC,OALpC;AAOL,kBAAIA,OAAJ,EAAaQ,YAAY,MAAZ,4BAAgBP,MAAhB,GAAwBC,IAAxB,CAA6BO,QAA7B,EAAuCN,KAAvC,CAA6CL,OAA7C;AAPR;AAAA;;AAAA;AASLU,cAAAA,YAAY,MAAZ,SAAgBT,IAAhB,EAAsBG,IAAtB,CAA2BO,QAA3B,EAAqCN,KAArC,CAA2CL,OAA3C;;AATK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BAaC;AACR,UAAMY,QAAQ,GAAG;AACfC,QAAAA,KAAK,EAAE,KAAKA,KADG;AAEfC,QAAAA,GAAG,EAAE,KAAKA,GAFK;AAGfC,QAAAA,MAAM,EAAE,KAAKA,MAHE;AAIfC,QAAAA,MAAM,EAAE,KAAKA;AAJE,OAAjB;AAOA,aAAO,KAAKpB,KAAL,CAAWqB,QAAX,CAAoBL,QAApB,CAAP;AACD;;;;;;;;;;;EAtDgBpB,a;;AAyDnBE,IAAI,CAACwB,SAAL,GAAiB;AACf;AACAD,EAAAA,QAAQ,EAAExB,SAAS,CAAC0B,IAAV,CAAeC,UAFV;;AAGf;AACAzB,EAAAA,WAAW,EAAEF,SAAS,CAAC0B,IAJR;;AAKf;AACArB,EAAAA,SAAS,EAAEL,SAAS,CAAC0B,IANN;;AAOf;AACAZ,EAAAA,YAAY,EAAEd,SAAS,CAAC0B,IART;;AASf;AACAT,EAAAA,YAAY,EAAEjB,SAAS,CAAC0B,IAVT;;AAWf;AACApB,EAAAA,KAAK,EAAEN,SAAS,CAAC0B,IAZF;;AAaf;AACAX,EAAAA,QAAQ,EAAEf,SAAS,CAAC0B,IAdL;;AAef;AACAR,EAAAA,QAAQ,EAAElB,SAAS,CAAC0B,IAhBL;;AAiBf;;AAEAtB,EAAAA,SAAS,EAAEJ,SAAS,CAAC0B,IAnBN;;AAoBf;;AAEAb,EAAAA,YAAY,EAAEb,SAAS,CAAC0B,IAtBT;;AAuBf;;AAEAV,EAAAA,YAAY,EAAEhB,SAAS,CAAC0B,IAzBT;;AA0Bf;AACAnB,EAAAA,OAAO,EAAEP,SAAS,CAAC0B;AA3BJ,CAAjB;AA8BAzB,IAAI,CAAC2B,YAAL,GAAoB;AAClB1B,EAAAA,WAAW,EAAE,uBAAM,CAAE,CADH;AAElBG,EAAAA,SAAS,EAAE,qBAAM,CAAE,CAFD;AAGlBS,EAAAA,YAAY,EAAE,wBAAM,CAAE,CAHJ;AAIlBG,EAAAA,YAAY,EAAE,wBAAM,CAAE,CAJJ;AAKlBX,EAAAA,KAAK,EAAE,iBAAM,CAAE,CALG;AAMlBS,EAAAA,QAAQ,EAAE,oBAAM,CAAE,CANA;AAOlBG,EAAAA,QAAQ,EAAE,oBAAM,CAAE,CAPA;AAQlBX,EAAAA,OAAO,EAAE,mBAAM,CAAE;AARC,CAApB;eAWeN,I;AAAf;;;;;;;;;;;;0BAlGMA,I","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Crud extends PureComponent {\r\n  build = (...args) => {\r\n    const { buildRecord } = this.props\r\n    return buildRecord(...args)\r\n  }\r\n\r\n  add = async (...args) => {\r\n    const { beforeAdd, addRecord, onAdd, onError } = this.props\r\n\r\n    if (beforeAdd) {\r\n      const proceed = await beforeAdd(...args)\r\n      const fnArgs = proceed === true ? args : proceed\r\n\r\n      if (proceed) addRecord(...fnArgs).then(onAdd).catch(onError)\r\n    } else {\r\n      addRecord(...args).then(onAdd).catch(onError)\r\n    }\r\n  }\r\n\r\n  update = async (...args) => {\r\n    const { beforeUpdate, updateRecord, onUpdate, onError } = this.props\r\n\r\n    if (beforeUpdate) {\r\n      const proceed = await beforeUpdate(...args)\r\n      const fnArgs = proceed === true ? args : proceed\r\n\r\n      if (proceed) updateRecord(...fnArgs).then(onUpdate).catch(onError)\r\n    } else {\r\n      updateRecord(...args).then(onUpdate).catch(onError)\r\n    }\r\n  }\r\n\r\n  remove = async (...args) => {\r\n    const { beforeRemove, removeRecord, onRemove, onError } = this.props\r\n\r\n    if (beforeRemove) {\r\n      const proceed = await beforeRemove(...args)\r\n      const fnArgs = proceed === true ? args : proceed\r\n\r\n      if (proceed) removeRecord(...fnArgs).then(onRemove).catch(onError)\r\n    } else {\r\n      removeRecord(...args).then(onRemove).catch(onError)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const handlers = {\r\n      build: this.build,\r\n      add: this.add,\r\n      update: this.update,\r\n      remove: this.remove\r\n    }\r\n\r\n    return this.props.children(handlers)\r\n  }\r\n}\r\n\r\nCrud.propTypes = {\r\n  /**  Callback with build, add, update, remove promises. */\r\n  children: PropTypes.func.isRequired,\r\n  /** Function to build objectType. */\r\n  buildRecord: PropTypes.func,\r\n  /** Function to add record. */\r\n  addRecord: PropTypes.func,\r\n  /** Function to update record. */\r\n  updateRecord: PropTypes.func,\r\n  /** Function to remove record. */\r\n  removeRecord: PropTypes.func,\r\n  /** Callback called when add() resolves. Provides added record. */\r\n  onAdd: PropTypes.func,\r\n  /** Callback called when update() resolves. Provides updated record. */\r\n  onUpdate: PropTypes.func,\r\n  /** Callback called when remove() resolves. Provides removed record. */\r\n  onRemove: PropTypes.func,\r\n  /** Callback called before add(). Takes a promise or function.\r\n   Return truthy value to proceed with add() */\r\n  beforeAdd: PropTypes.func,\r\n  /** Callback called before update(). Takes a promise or function.\r\n   Return truthy value to proceed with update() */\r\n  beforeUpdate: PropTypes.func,\r\n  /** Callback called before remove(). Takes a promise or function.\r\n   Return truthy value to proceed with remove() */\r\n  beforeRemove: PropTypes.func,\r\n  /** Callback called when one of crud function catches */\r\n  onError: PropTypes.func,\r\n}\r\n\r\nCrud.defaultProps = {\r\n  buildRecord: () => {},\r\n  addRecord: () => {},\r\n  updateRecord: () => {},\r\n  removeRecord: () => {},\r\n  onAdd: () => {},\r\n  onUpdate: () => {},\r\n  onRemove: () => {},\r\n  onError: () => {}\r\n}\r\n\r\nexport default Crud\r\n"]}]}
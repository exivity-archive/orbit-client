{"remainingRequest":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"@babel/preset-env\",{\"useBuiltIns\":\"entry\",\"modules\":false}],\"@babel/preset-react\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-optional-chaining\",\"@babel/plugin-proposal-class-properties\",\"babel-plugin-styled-components\",[\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"c:\\\\code\\\\exivity\\\\orbit-client\\\\node_modules\\\\docz\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"env\":{\"test\":{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\"]}},\"cacheDirectory\":true,\"babelrc\":false}!c:\\code\\exivity\\orbit-client\\src\\components\\Record.js","dependencies":[{"path":"c:\\code\\exivity\\orbit-client\\src\\components\\Record.js","mtime":1543015494213},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1543011188795},{"path":"c:\\code\\exivity\\orbit-client\\node_modules\\babel-loader\\lib\\index.js","mtime":1542804666583}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withData } from 'react-orbitjs';\nimport omit from 'lodash/omit';\nimport withCrud from './withCrud';\nexport var notAllowedProps = ['id', 'type', 'related', 'relatedTo', 'children', 'queryStore', 'updateStore', 'buildRecord', 'addRecord', 'updateRecord', 'removeRecord', 'cache'];\n\nvar updateState = function updateState(props, state) {\n  var scenarios = {\n    initializeRecord: !props.id && props.id !== state.idReference,\n    receivedNewId: !!props.id && props.id !== state.idReference,\n    receivedNewRecord: !!props[props.type] && props[props.type] !== state.recordReference,\n    recordNotFoundInCache: !!props.id && !props[props.type],\n    cacheOnly: props.cache === 'only',\n    loading: props.loading,\n    error: !!props.error\n  };\n\n  if (scenarios.loading || scenarios.error) {\n    var _ref;\n\n    return _ref = {\n      recordReference: null\n    }, _defineProperty(_ref, props.type, null), _defineProperty(_ref, \"loading\", !!props.loading), _defineProperty(_ref, \"error\", props.error || false), _ref;\n  }\n\n  if (scenarios.initializeRecord) {\n    var _ref2;\n\n    var record = props.buildRecord(props.type);\n    return _ref2 = {\n      idReference: props.id,\n      recordReference: record\n    }, _defineProperty(_ref2, props.type, record), _defineProperty(_ref2, \"loading\", false), _defineProperty(_ref2, \"error\", false), _ref2;\n  }\n\n  if (scenarios.receivedNewId) {\n    var _ref4;\n\n    if (scenarios.recordNotFoundInCache) {\n      var _ref3;\n\n      return _ref3 = {\n        idReference: props.id,\n        recordReference: null\n      }, _defineProperty(_ref3, props.type, null), _defineProperty(_ref3, \"loading\", !scenarios.cacheOnly), _defineProperty(_ref3, \"error\", scenarios.cacheOnly ? {\n        message: \"\".concat(props.type, \" not found in cache\")\n      } : false), _ref3;\n    }\n\n    return _ref4 = {\n      idReference: props.id,\n      recordReference: props[props.type]\n    }, _defineProperty(_ref4, props.type, props[props.type]), _defineProperty(_ref4, \"loading\", false), _defineProperty(_ref4, \"error\", false), _ref4;\n  }\n\n  if (scenarios.receivedNewRecord) {\n    var _ref5;\n\n    return _ref5 = {\n      idReference: props.id,\n      recordReference: props[props.type]\n    }, _defineProperty(_ref5, props.type, props[props.type]), _defineProperty(_ref5, \"loading\", false), _defineProperty(_ref5, \"error\", false), _ref5;\n  }\n\n  return null;\n};\n\nvar updateStateRelated = function updateStateRelated(props, state) {\n  var scenarios = {\n    noRecordToRelateTo: !props.relatedTo,\n    relatedRecordNotFoundInCache: !!props.relatedTo && !props[props.type],\n    receivedNewRelatedRecord: !!props[props.type] && props[props.type] !== state.recordReference,\n    noRelatedRecord: !props[props.type],\n    cacheOnly: props.cache === 'only',\n    loading: props.loading,\n    error: !!props.error\n  };\n\n  if (scenarios.loading || scenarios.error) {\n    var _ref6;\n\n    return _ref6 = {\n      recordReference: null\n    }, _defineProperty(_ref6, props.type, null), _defineProperty(_ref6, \"loading\", !!props.loading), _defineProperty(_ref6, \"error\", props.error || false), _ref6;\n  }\n\n  if (scenarios.noRecordToRelateTo) {\n    var _ref7;\n\n    return _ref7 = {\n      recordReference: null\n    }, _defineProperty(_ref7, props.type, null), _defineProperty(_ref7, \"performedQuery\", false), _defineProperty(_ref7, \"loading\", false), _defineProperty(_ref7, \"error\", false), _ref7;\n  }\n\n  if (scenarios.relatedRecordNotFoundInCache && !props.required) {\n    if (!scenarios.cacheOnly && !state.performedQuery) {\n      var _ref8;\n\n      return _ref8 = {\n        recordReference: null\n      }, _defineProperty(_ref8, props.type, null), _defineProperty(_ref8, \"loading\", true), _defineProperty(_ref8, \"error\", false), _ref8;\n    } else {\n      var _ref9;\n\n      return _ref9 = {\n        recordReference: null\n      }, _defineProperty(_ref9, props.type, null), _defineProperty(_ref9, \"loading\", false), _defineProperty(_ref9, \"error\", false), _ref9;\n    }\n  }\n\n  if (scenarios.noRelatedRecord && props.required) {\n    if (!scenarios.cacheOnly && !state.performedQuery) {\n      var _ref10;\n\n      return _ref10 = {\n        recordReference: null\n      }, _defineProperty(_ref10, props.type, null), _defineProperty(_ref10, \"loading\", true), _defineProperty(_ref10, \"error\", false), _ref10;\n    } else {\n      var _ref11;\n\n      return _ref11 = {\n        recordReference: null\n      }, _defineProperty(_ref11, props.type, null), _defineProperty(_ref11, \"loading\", false), _defineProperty(_ref11, \"error\", {\n        message: \"Related \".concat(props.type, \" has not been found while being required\")\n      }), _ref11;\n    }\n  }\n\n  if (scenarios.receivedNewRelatedRecord) {\n    var _ref12;\n\n    return _ref12 = {\n      recordReference: props[props.type]\n    }, _defineProperty(_ref12, props.type, props[props.type]), _defineProperty(_ref12, \"performedQuery\", false), _defineProperty(_ref12, \"loading\", false), _defineProperty(_ref12, \"error\", false), _ref12;\n  }\n\n  return null;\n};\n\nvar proceedIf = function proceedIf() {\n  for (var _len = arguments.length, conditions = new Array(_len), _key = 0; _key < _len; _key++) {\n    conditions[_key] = arguments[_key];\n  }\n\n  return conditions.every(function (condition) {\n    return !!condition;\n  });\n};\n\nvar Record =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Record, _PureComponent);\n\n  function Record(props) {\n    var _this;\n\n    _classCallCheck(this, Record);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Record).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"shouldQuery\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          type = _this$props.type;\n      var _this$state = _this.state,\n          performedQuery = _this$state.performedQuery,\n          record = _this$state[type],\n          loading = _this$state.loading,\n          error = _this$state.error;\n      return proceedIf(!performedQuery, cache !== 'only', !record, !loading, !error);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"query\", function (query) {\n      var _this$props2 = _this.props,\n          id = _this$props2.id,\n          related = _this$props2.related,\n          relatedTo = _this$props2.relatedTo,\n          type = _this$props2.type;\n      if (related && relatedTo) return query.findRelatedRecord({\n        type: relatedTo.type,\n        id: relatedTo.id\n      }, type);\n      return query.findRecord({\n        type: type,\n        id: id\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"queryStore\", function () {\n      _this.props.queryStore(_this.query).then(function () {\n        return _this.setState({\n          performedQuery: true,\n          loading: false\n        });\n      }).catch(function (error) {\n        return _this.setState({\n          loading: false,\n          error: error\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"findAndSetProperty\", function (path, record, value) {\n      if (path.length === 1) {\n        record[path] = value;\n      } else {\n        _this.findAndSetProperty(path.slice(1), record[path[0]], value);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setPropertyByPath\", function (path) {\n      var newRecord = _objectSpread({}, _this.state[_this.props.type]);\n\n      if ((arguments.length <= 1 ? 0 : arguments.length - 1) === 2) {\n        return function () {\n          _this.findAndSetProperty(path, newRecord, value);\n\n          _this.setState(_defineProperty({}, _this.props.type, newRecord));\n        };\n      }\n\n      return function (value) {\n        _this.findAndSetProperty(path, newRecord, value);\n\n        _this.setState(_defineProperty({}, _this.props.type, newRecord));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setProperty\", function (property) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      if (args.length === 2) {\n        var nextProperty = args[0],\n            _value = args[1];\n        var val = property === 'relationships' ? {\n          data: _value\n        } : _value;\n        return function () {\n          return _this.setPropertyByPath([property, nextProperty], val)();\n        };\n      }\n\n      return function (value) {\n        var val = property === 'relationships' ? {\n          data: value\n        } : value;\n\n        _this.setPropertyByPath([property].concat(args), val)();\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setAttribute\", function () {\n      var _this2;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return (_this2 = _this).setProperty.apply(_this2, ['attributes'].concat(args));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setRelationship\", function () {\n      var _this3;\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return (_this3 = _this).setProperty.apply(_this3, ['relationships'].concat(args));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"resetAttributes\", function (attributes) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      attributes.map(function (attribute) {\n        return _this.setPropertyByPath(['attributes', attribute], value);\n      })();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"relatedToRecord\", function () {\n      var _this$props3 = _this.props,\n          relatedTo = _this$props3.relatedTo,\n          type = _this$props3.type;\n      var record = _this.state[type];\n      return !relatedTo && (record === null || record === void 0 ? void 0 : record.id) ? record : relatedTo;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getExtendedRecord\", function () {\n      var record = _this.state[_this.props.type];\n      if (!record) return null;\n      return _objectSpread({}, record, {\n        setAttribute: _this.setAttribute,\n        setRelationship: _this.setRelationship,\n        resetAttributes: _this.resetAttributes,\n        setProperty: _this.setPropertyByPath,\n        save: !(record === null || record === void 0 ? void 0 : record.id) ? function () {\n          var _this$props4;\n\n          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n            args[_key5] = arguments[_key5];\n          }\n\n          return (_this$props4 = _this.props).add.apply(_this$props4, [_objectSpread({}, record)].concat(args));\n        } : function () {\n          var _this$props5;\n\n          for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n            args[_key6] = arguments[_key6];\n          }\n\n          return (_this$props5 = _this.props).update.apply(_this$props5, [_objectSpread({}, record)].concat(args));\n        },\n        remove: function remove() {\n          var _this$props6;\n\n          for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n            args[_key7] = arguments[_key7];\n          }\n\n          return (_this$props6 = _this.props).remove.apply(_this$props6, [_objectSpread({}, record)].concat(args));\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getStateAndReceivedEntities\", function () {\n      var receivedEntities = omit(_this.props, notAllowedProps.concat([_this.props.type]));\n      return _objectSpread(_defineProperty({}, _this.props.type, _this.getExtendedRecord()), receivedEntities, {\n        loading: _this.state.loading,\n        error: _this.state.error\n      });\n    });\n\n    _this.state = props.related ? {\n      recordReference: null\n    } : {\n      idReference: null,\n      recordReference: null\n    };\n    return _this;\n  }\n\n  _createClass(Record, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.shouldQuery()) this.queryStore();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.shouldQuery()) this.queryStore();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          type = _this$props7.type,\n          children = _this$props7.children;\n      var relatedTo = this.relatedToRecord();\n\n      if (typeof children !== 'function') {\n        return React.cloneElement(this.props.children, _objectSpread({\n          key: \"\".concat(type, \"-relatedTo-\").concat(relatedTo === null || relatedTo === void 0 ? void 0 : relatedTo.id)\n        }, this.getStateAndReceivedEntities(), {\n          relatedTo: relatedTo\n        }));\n      }\n\n      return children(this.getStateAndReceivedEntities());\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      return props.related ? updateStateRelated(props, state) : updateState(props, state);\n    }\n  }]);\n\n  return Record;\n}(PureComponent);\n\nvar mapRecordsToProps = function mapRecordsToProps(_ref13) {\n  var id = _ref13.id,\n      type = _ref13.type,\n      related = _ref13.related,\n      relatedTo = _ref13.relatedTo,\n      cache = _ref13.cache;\n\n  if (cache === 'skip') {\n    return {};\n  }\n\n  if (id) {\n    return _defineProperty({}, type, function (q) {\n      return q.findRecord({\n        type: type,\n        id: id\n      });\n    });\n  }\n\n  if (related && relatedTo) {\n    return _defineProperty({}, type, function (q) {\n      return q.findRelatedRecord({\n        type: relatedTo.type,\n        id: relatedTo.id\n      }, type);\n    });\n  }\n\n  return {};\n};\n\nvar mergeProps = function mergeProps(record, ownProps) {\n  var _ownProps$relatedTo;\n\n  // Temporary fix for react-orbitjs not clearing last result when nothing is found\n  if (ownProps.related && !((_ownProps$relatedTo = ownProps.relatedTo) === null || _ownProps$relatedTo === void 0 ? void 0 : _ownProps$relatedTo.relationships[ownProps.type])) {\n    return _objectSpread({}, record, ownProps, _defineProperty({}, ownProps.type, null));\n  } // Temporary fix for react-orbitjs not clearing last result when nothing is found\n\n\n  if (!ownProps.id && !ownProps.related) {\n    return _objectSpread({}, record, ownProps, _defineProperty({}, ownProps.type, null));\n  }\n\n  return _objectSpread({}, ownProps, record);\n};\n\nexport { Record };\nvar WithCrud = withCrud(Record);\n\nvar _default = withData(mapRecordsToProps, mergeProps)(WithCrud);\n\nexport default _default;\nRecord.defaultProps = {\n  relatedTo: null,\n  cache: 'auto'\n};\nRecord.propTypes = {\n  type: PropTypes.string,\n  id: PropTypes.string,\n  cache: PropTypes.oneOf(['only', 'skip', 'auto']),\n  buildRecord: PropTypes.func.isRequired,\n  addRecord: PropTypes.func.isRequired,\n  updateRecord: PropTypes.func.isRequired,\n  removeRecord: PropTypes.func.isRequired,\n  related: PropTypes.bool,\n  relatedTo: PropTypes.object,\n  required: PropTypes.bool\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(notAllowedProps, \"notAllowedProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\Record.js\");\n  reactHotLoader.register(updateState, \"updateState\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\Record.js\");\n  reactHotLoader.register(updateStateRelated, \"updateStateRelated\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\Record.js\");\n  reactHotLoader.register(proceedIf, \"proceedIf\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\Record.js\");\n  reactHotLoader.register(Record, \"Record\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\Record.js\");\n  reactHotLoader.register(mapRecordsToProps, \"mapRecordsToProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\Record.js\");\n  reactHotLoader.register(mergeProps, \"mergeProps\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\Record.js\");\n  reactHotLoader.register(WithCrud, \"WithCrud\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\Record.js\");\n  reactHotLoader.register(_default, \"default\", \"c:\\\\code\\\\exivity\\\\orbit-client\\\\src\\\\components\\\\Record.js\");\n  leaveModule(module);\n})();\n\n;\nRecord.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"getDerivedStateFromProps\",\n    \"docblock\": null,\n    \"modifiers\": [\"static\"],\n    \"params\": [{\n      \"name\": \"props\",\n      \"type\": null\n    }, {\n      \"name\": \"state\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"shouldQuery\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"query\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"query\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"queryStore\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"findAndSetProperty\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"path\",\n      \"type\": null\n    }, {\n      \"name\": \"record\",\n      \"type\": null\n    }, {\n      \"name\": \"value\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setPropertyByPath\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"path\",\n      \"type\": null\n    }, {\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setProperty\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"property\",\n      \"type\": null\n    }, {\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setAttribute\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setRelationship\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"...args\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"resetAttributes\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"attributes\",\n      \"type\": null\n    }, {\n      \"name\": \"value\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"relatedToRecord\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"getExtendedRecord\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"getStateAndReceivedEntities\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"Record\",\n  \"props\": {\n    \"relatedTo\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"cache\": {\n      \"defaultValue\": {\n        \"value\": \"'auto'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'only'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'skip'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'auto'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"buildRecord\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"addRecord\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"updateRecord\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"removeRecord\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"related\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"required\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["c:\\code\\exivity\\orbit-client\\src\\components\\Record.js"],"names":["React","PureComponent","PropTypes","withData","omit","withCrud","notAllowedProps","updateState","props","state","scenarios","initializeRecord","id","idReference","receivedNewId","receivedNewRecord","type","recordReference","recordNotFoundInCache","cacheOnly","cache","loading","error","record","buildRecord","message","updateStateRelated","noRecordToRelateTo","relatedTo","relatedRecordNotFoundInCache","receivedNewRelatedRecord","noRelatedRecord","required","performedQuery","proceedIf","conditions","every","condition","Record","query","related","findRelatedRecord","findRecord","queryStore","then","setState","catch","path","value","length","findAndSetProperty","slice","newRecord","property","args","nextProperty","val","data","setPropertyByPath","setProperty","attributes","undefined","map","attribute","setAttribute","setRelationship","resetAttributes","save","add","update","remove","receivedEntities","getExtendedRecord","shouldQuery","children","relatedToRecord","cloneElement","key","getStateAndReceivedEntities","mapRecordsToProps","q","mergeProps","ownProps","relationships","WithCrud","defaultProps","propTypes","string","oneOf","func","isRequired","addRecord","updateRecord","removeRecord","bool","object"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withData } from 'react-orbitjs'\r\nimport omit from 'lodash/omit'\r\n\r\nimport withCrud from './withCrud'\r\n\r\nexport const notAllowedProps = ['id', 'type', 'related', 'relatedTo', 'children', 'queryStore', 'updateStore',\r\n'buildRecord', 'addRecord', 'updateRecord', 'removeRecord', 'cache']\r\n\r\nconst updateState = (props, state) => {\r\n  const scenarios = {\r\n    initializeRecord: !props.id && (props.id !== state.idReference),\r\n    receivedNewId: !!props.id && (props.id !== state.idReference),\r\n    receivedNewRecord: !!props[props.type] && (props[props.type] !== state.recordReference),\r\n    recordNotFoundInCache: !!props.id && !props[props.type],\r\n    cacheOnly: props.cache === 'only',\r\n    loading: props.loading,\r\n    error: !!props.error\r\n  }\r\n\r\n  if (scenarios.loading || scenarios.error) {\r\n    return {\r\n      recordReference: null,\r\n      [props.type]: null,\r\n      loading: !!props.loading ,\r\n      error: props.error || false\r\n    }\r\n  }\r\n\r\n  if (scenarios.initializeRecord) {\r\n    const record = props.buildRecord(props.type)\r\n\r\n    return {\r\n      idReference: props.id,\r\n      recordReference: record,\r\n      [props.type]: record,\r\n      loading: false,\r\n      error: false\r\n    }\r\n  }\r\n\r\n  if (scenarios.receivedNewId) {\r\n    if (scenarios.recordNotFoundInCache) {\r\n      return {\r\n        idReference: props.id,\r\n        recordReference: null,\r\n        [props.type]: null,\r\n        loading: !scenarios.cacheOnly,\r\n        error: scenarios.cacheOnly\r\n          ? { message: `${props.type} not found in cache` }\r\n          : false\r\n      }\r\n    }\r\n\r\n    return {\r\n      idReference: props.id,\r\n      recordReference: props[props.type],\r\n      [props.type]: props[props.type],\r\n      loading: false,\r\n      error: false\r\n    }\r\n  }\r\n\r\n  if (scenarios.receivedNewRecord) {\r\n    return {\r\n      idReference: props.id,\r\n      recordReference: props[props.type],\r\n      [props.type]: props[props.type],\r\n      loading: false,\r\n      error: false\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst updateStateRelated = (props, state) => {\r\n  const scenarios = {\r\n    noRecordToRelateTo: !props.relatedTo,\r\n    relatedRecordNotFoundInCache: !!props.relatedTo && !props[props.type],\r\n    receivedNewRelatedRecord: !!props[props.type] && (props[props.type] !== state.recordReference),\r\n    noRelatedRecord: !props[props.type],\r\n    cacheOnly: props.cache === 'only',\r\n    loading: props.loading,\r\n    error: !!props.error\r\n  }\r\n\r\n  if (scenarios.loading || scenarios.error) {\r\n    return {\r\n      recordReference: null,\r\n      [props.type]: null,\r\n      loading: !!props.loading,\r\n      error: props.error || false\r\n    }\r\n  }\r\n\r\n  if (scenarios.noRecordToRelateTo) {\r\n    return {\r\n      recordReference: null,\r\n      [props.type]: null,\r\n      performedQuery: false,\r\n      loading: false,\r\n      error: false\r\n    }\r\n  }\r\n\r\n  if (scenarios.relatedRecordNotFoundInCache && !props.required) {\r\n    if (!scenarios.cacheOnly && !state.performedQuery) {\r\n      return {\r\n        recordReference: null,\r\n        [props.type]: null,\r\n        loading: true,\r\n        error: false\r\n      }\r\n    } else {\r\n      return {\r\n        recordReference: null,\r\n        [props.type]: null,\r\n        loading: false,\r\n        error: false\r\n      }\r\n    }\r\n  }\r\n\r\n  if (scenarios.noRelatedRecord && props.required) {\r\n    if (!scenarios.cacheOnly && !state.performedQuery) {\r\n      return {\r\n        recordReference: null,\r\n        [props.type]: null,\r\n        loading: true,\r\n        error: false\r\n      }\r\n    } else {\r\n      return {\r\n        recordReference: null,\r\n        [props.type]: null,\r\n        loading: false,\r\n        error: {\r\n          message: `Related ${props.type} has not been found while being required`\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (scenarios.receivedNewRelatedRecord) {\r\n    return {\r\n      recordReference: props[props.type],\r\n      [props.type]: props[props.type],\r\n      performedQuery: false,\r\n      loading: false,\r\n      error: false\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst proceedIf = (...conditions) => conditions.every(condition => !!condition)\r\n\r\nclass Record extends PureComponent {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = props.related\r\n      ? {\r\n        recordReference: null\r\n      }\r\n      : {\r\n        idReference: null,\r\n        recordReference: null\r\n      }\r\n  }\r\n\r\n  static getDerivedStateFromProps (props, state) {\r\n    return props.related ? updateStateRelated(props, state) : updateState(props, state)\r\n  }\r\n\r\n  componentDidMount () {\r\n    if (this.shouldQuery()) this.queryStore()\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    if (this.shouldQuery()) this.queryStore()\r\n  }\r\n\r\n  shouldQuery = () => {\r\n    const { cache, type } = this.props\r\n    const { performedQuery, [type]: record, loading, error } = this.state\r\n\r\n    return proceedIf(\r\n      !performedQuery,\r\n      cache !== 'only',\r\n      !record,\r\n      !loading,\r\n      !error\r\n    )\r\n  }\r\n\r\n  query = (query) => {\r\n    const { id, related, relatedTo, type } = this.props\r\n\r\n    if (related && relatedTo) return query.findRelatedRecord({ type: relatedTo.type, id: relatedTo.id }, type)\r\n    return query.findRecord({ type, id })\r\n  }\r\n\r\n  queryStore = () => {\r\n    this.props.queryStore(this.query)\r\n      .then(() => this.setState({\r\n        performedQuery: true,\r\n        loading: false,\r\n      }))\r\n      .catch((error) => this.setState({\r\n        loading: false,\r\n        error\r\n      }))\r\n  }\r\n\r\n  findAndSetProperty = (path, record, value) => {\r\n    if (path.length === 1) {\r\n      record[path] = value\r\n    } else {\r\n      this.findAndSetProperty(path.slice(1), record[path[0]], value)\r\n    }\r\n  }\r\n\r\n  setPropertyByPath = (path, ...args) => {\r\n    const newRecord = { ...this.state[this.props.type] }\r\n\r\n    if (args.length === 2) {\r\n      return () => {\r\n        this.findAndSetProperty(path, newRecord, value)\r\n        this.setState({ [this.props.type]: newRecord })\r\n      }\r\n    }\r\n\r\n    return (value) => {\r\n      this.findAndSetProperty(path, newRecord, value)\r\n      this.setState({ [this.props.type]: newRecord })  \r\n    }\r\n  }\r\n\r\n  setProperty = (property, ...args) => {\r\n    if (args.length === 2) {\r\n      const [nextProperty, value] = args\r\n      const val = property === 'relationships' ? { data: value } : value\r\n\r\n      return () => this.setPropertyByPath([property, nextProperty], val)()\r\n    }\r\n\r\n    return (value) => {\r\n      const val = property === 'relationships' ? { data: value } : value\r\n      this.setPropertyByPath([property, ...args], val)()\r\n    }\r\n  }\r\n\r\n  setAttribute = (...args) => this.setProperty('attributes', ...args)\r\n\r\n  setRelationship = (...args) => this.setProperty('relationships', ...args)\r\n\r\n  resetAttributes = (attributes, value = undefined) => {\r\n    attributes.map(attribute => this.setPropertyByPath(['attributes', attribute], value))()\r\n  }\r\n\r\n  relatedToRecord = () => {\r\n    const { relatedTo, type } = this.props\r\n    const { [type]: record } = this.state\r\n\r\n    return !relatedTo && record?.id ? record : relatedTo\r\n  }\r\n\r\n  getExtendedRecord = () => {\r\n    const { [this.props.type]: record } = this.state\r\n    if (!record) return null\r\n\r\n    return {\r\n    ...record,\r\n    setAttribute: this.setAttribute,\r\n    setRelationship: this.setRelationship,\r\n    resetAttributes: this.resetAttributes,\r\n    setProperty: this.setPropertyByPath,\r\n    save: !record?.id\r\n      ? (...args) => this.props.add({ ...record }, ...args)\r\n      : (...args) => this.props.update({ ...record }, ...args),\r\n    remove: (...args) => this.props.remove({ ...record }, ...args)\r\n  }}\r\n\r\n  getStateAndReceivedEntities = () => {\r\n    const receivedEntities = omit(this.props, [...notAllowedProps, this.props.type])\r\n\r\n    return {\r\n      [this.props.type]: this.getExtendedRecord(),\r\n      ...receivedEntities,\r\n      loading: this.state.loading,\r\n      error: this.state.error\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { type, children } = this.props\r\n    const relatedTo = this.relatedToRecord()\r\n\r\n    if (typeof children !== 'function') {\r\n      return React.cloneElement(\r\n        this.props.children,\r\n        {\r\n          key: `${type}-relatedTo-${relatedTo?.id}`,\r\n          ...this.getStateAndReceivedEntities(),\r\n          relatedTo,\r\n        }\r\n      )\r\n    }\r\n\r\n    return children(this.getStateAndReceivedEntities())\r\n  }\r\n}\r\n\r\nconst mapRecordsToProps = ({ id, type, related, relatedTo, cache }) => {\r\n  if (cache === 'skip') {\r\n    return {}\r\n  }\r\n\r\n  if (id) {\r\n    return { [type]: q => q.findRecord({ type, id }) }\r\n  }\r\n\r\n  if (related && relatedTo) {\r\n    return { [type]: q => q.findRelatedRecord({ type: relatedTo.type, id: relatedTo.id }, type) }\r\n  }\r\n\r\n  return {}\r\n}\r\n\r\n\r\nconst mergeProps = (record, ownProps) => {\r\n  // Temporary fix for react-orbitjs not clearing last result when nothing is found\r\n  if (ownProps.related && !ownProps.relatedTo?.relationships[ownProps.type]) {\r\n    return {\r\n      ...record,\r\n      ...ownProps,\r\n      [ownProps.type]: null\r\n    }\r\n  }\r\n\r\n  // Temporary fix for react-orbitjs not clearing last result when nothing is found\r\n  if (!ownProps.id && !ownProps.related) {\r\n    return {\r\n      ...record,\r\n      ...ownProps,\r\n      [ownProps.type]: null\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...ownProps,\r\n    ...record\r\n  }\r\n}\r\n\r\nexport { Record }\r\n\r\nconst WithCrud = withCrud(Record)\r\n\r\nexport default withData(mapRecordsToProps, mergeProps)(WithCrud)\r\n\r\nRecord.defaultProps = {\r\n  relatedTo: null,\r\n  cache: 'auto',\r\n}\r\n\r\nRecord.propTypes = {\r\n  type: PropTypes.string,\r\n  id: PropTypes.string,\r\n  cache: PropTypes.oneOf([\r\n    'only',\r\n    'skip',\r\n    'auto'\r\n  ]),\r\n  buildRecord: PropTypes.func.isRequired,\r\n  addRecord: PropTypes.func.isRequired,\r\n  updateRecord: PropTypes.func.isRequired,\r\n  removeRecord: PropTypes.func.isRequired,\r\n  related: PropTypes.bool,\r\n  relatedTo: PropTypes.object,\r\n  required: PropTypes.bool\r\n}\r\n"]}]}